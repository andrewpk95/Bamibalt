{"version":3,"file":"main.js","mappings":"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","sources":["webpack://bamibalt/webpack/runtime/chunk loaded","webpack://bamibalt/./src/assets/images/og_image.jpg","webpack://bamibalt/./src/types/mode.ts","webpack://bamibalt/./src/assets/settings.ts","webpack://bamibalt/./src/types/image.ts","webpack://bamibalt/./src/components/game/background.ts","webpack://bamibalt/./src/types/sound.ts","webpack://bamibalt/./src/types/zIndex.ts","webpack://bamibalt/./src/components/game/bamiko.ts","webpack://bamibalt/./src/components/game/difficulty.ts","webpack://bamibalt/./src/components/game/musicPlayer.ts","webpack://bamibalt/./src/components/objectPool/pool.ts","webpack://bamibalt/./src/components/game/obstaclePool/base.ts","webpack://bamibalt/./src/components/game/obstacles/base.ts","webpack://bamibalt/./src/components/game/obstacles/box.ts","webpack://bamibalt/./src/components/game/obstaclePool/box.ts","webpack://bamibalt/./src/components/game/obstacleGroup/base.ts","webpack://bamibalt/./src/components/game/obstacles/ground.ts","webpack://bamibalt/./src/components/game/obstaclePool/ground.ts","webpack://bamibalt/./src/components/game/obstacleGroup/box.ts","webpack://bamibalt/./src/components/game/obstacles/building.ts","webpack://bamibalt/./src/components/game/obstaclePool/building.ts","webpack://bamibalt/./src/components/game/obstacles/window.ts","webpack://bamibalt/./src/components/game/obstaclePool/window.ts","webpack://bamibalt/./src/components/game/obstacleGroup/building.ts","webpack://bamibalt/./src/components/game/obstacleGroup/ground.ts","webpack://bamibalt/./src/components/game/obstacles/plane.ts","webpack://bamibalt/./src/components/game/obstaclePool/plane.ts","webpack://bamibalt/./src/components/game/obstacleGroup/plane.ts","webpack://bamibalt/./src/components/game/obstacles/platform.ts","webpack://bamibalt/./src/components/game/obstaclePool/platform.ts","webpack://bamibalt/./src/components/game/obstacleGroup/platform.ts","webpack://bamibalt/./src/components/game/obstacleGenerator.ts","webpack://bamibalt/./src/components/game/yuri.ts","webpack://bamibalt/./src/scenes/base.ts","webpack://bamibalt/./src/types/ui.ts","webpack://bamibalt/./src/components/text.ts","webpack://bamibalt/./src/scenes/gameUI.ts","webpack://bamibalt/./src/components/buttons/baseButton.ts","webpack://bamibalt/./src/components/buttons/muteButton.ts","webpack://bamibalt/./src/components/popup/sizerPopup.ts","webpack://bamibalt/./src/components/popup/basePopup.ts","webpack://bamibalt/./src/components/popup/creditsPopup.ts","webpack://bamibalt/./src/components/popup/descriptionPopup.ts","webpack://bamibalt/./src/scenes/popup.ts","webpack://bamibalt/./src/scenes/game.ts","webpack://bamibalt/./src/scenes/boot.ts","webpack://bamibalt/./src/assets/images/title_screen.png","webpack://bamibalt/./src/assets/images/gameover_screen.png","webpack://bamibalt/./src/assets/images/bamiko.png","webpack://bamibalt/./src/assets/images/yuri.png","webpack://bamibalt/./src/assets/images/estelle.png","webpack://bamibalt/./src/assets/images/object.png","webpack://bamibalt/./src/assets/images/ground.png","webpack://bamibalt/./src/assets/images/building_top.png","webpack://bamibalt/./src/assets/images/building_inside.png","webpack://bamibalt/./src/assets/images/building_bottom.png","webpack://bamibalt/./src/assets/images/sky.png","webpack://bamibalt/./src/assets/images/bg_building_front.png","webpack://bamibalt/./src/assets/images/bg_building_back.png","webpack://bamibalt/./src/assets/sounds/Title_Theme.mp3","webpack://bamibalt/./src/assets/sounds/Bamibalt_Theme.mp3","webpack://bamibalt/./src/assets/sounds/Yuri_Mini_Theme.mp3","webpack://bamibalt/./src/assets/sounds/Estelle_Mini_Theme.mp3","webpack://bamibalt/./src/assets/sounds/GameOver_Theme.mp3","webpack://bamibalt/./src/assets/sounds/hit.mp3","webpack://bamibalt/./src/assets/sounds/jump.mp3","webpack://bamibalt/./src/assets/sounds/land.mp3","webpack://bamibalt/./src/assets/sounds/splat.mp3","webpack://bamibalt/./src/assets/sounds/window_break.mp3","webpack://bamibalt/./src/assets/sounds/plane.mp3","webpack://bamibalt/./src/assets/sounds/fall.mp3","webpack://bamibalt/./src/assets/sounds/warning.mp3","webpack://bamibalt/./src/assets/sounds/click.mp3","webpack://bamibalt/./src/assets/sounds/select.mp3","webpack://bamibalt/./src/assets/sounds/runaway.mp3","webpack://bamibalt/./src/util/color.ts","webpack://bamibalt/./src/components/buttons/roundRectangleButton.ts","webpack://bamibalt/./src/components/buttons/playButton.ts","webpack://bamibalt/./src/components/buttons/ReloadButton.ts","webpack://bamibalt/./src/scenes/loading.ts","webpack://bamibalt/./src/components/buttons/creditButton.ts","webpack://bamibalt/./src/components/buttons/descriptionButton.ts","webpack://bamibalt/./src/components/buttons/startButton.ts","webpack://bamibalt/./src/components/buttons/arrowButton.ts","webpack://bamibalt/./src/components/ui/modeSelector.ts","webpack://bamibalt/./src/components/ui/titleText.ts","webpack://bamibalt/./src/util/api.ts","webpack://bamibalt/./src/scenes/title.ts","webpack://bamibalt/./src/components/buttons/retryButton.ts","webpack://bamibalt/./src/components/buttons/toTitleButton.ts","webpack://bamibalt/./src/scenes/result.ts","webpack://bamibalt/./src/scenes/intro.ts","webpack://bamibalt/./src/index.ts","webpack://bamibalt/webpack/bootstrap","webpack://bamibalt/webpack/runtime/compat get default export","webpack://bamibalt/webpack/runtime/define property getters","webpack://bamibalt/webpack/runtime/global","webpack://bamibalt/webpack/runtime/hasOwnProperty shorthand","webpack://bamibalt/webpack/runtime/publicPath","webpack://bamibalt/webpack/runtime/jsonp chunk loading","webpack://bamibalt/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export default __webpack_public_path__ + \"images/og_image.jpg\";","export var GameMode;\r\n(function (GameMode) {\r\n    GameMode[GameMode[\"Classic\"] = 0] = \"Classic\";\r\n    GameMode[GameMode[\"Extreme\"] = 1] = \"Extreme\";\r\n    GameMode[GameMode[\"Estelle\"] = 2] = \"Estelle\";\r\n})(GameMode || (GameMode = {}));\r\nconst MODE_MAP = {\r\n    [GameMode.Classic]: {\r\n        text: 'TitleScene_Mode_Classic',\r\n    },\r\n    [GameMode.Extreme]: {\r\n        text: 'TitleScene_Mode_Extreme',\r\n    },\r\n    [GameMode.Estelle]: {\r\n        text: 'TitleScene_Mode_Estelle',\r\n    },\r\n};\r\nexport function getModeText(mode) {\r\n    const modeInfo = MODE_MAP[mode];\r\n    if (!modeInfo) {\r\n        return 'TitleScene_Mode_Classic';\r\n    }\r\n    return modeInfo.text;\r\n}\r\n","import { GameMode } from 'src/types/mode';\r\nconst GameSettings = {\r\n    camera: {\r\n        offsetX: 200,\r\n        damagedOffsetX: 400,\r\n        offsetY: 200, // Pixel\r\n    },\r\n    bamiko: {\r\n        jumpVelocity: 900,\r\n        maxJumpDuration: 0.25,\r\n        doubleJumpVelocity: 800,\r\n        maxDoubleJumpDuration: 0.2, // Seconds\r\n    },\r\n    yuri: {\r\n        followDistance: 300, // Pixel\r\n    },\r\n    obstacle: {\r\n        building: {\r\n            height: 300,\r\n        },\r\n    },\r\n    difficulty: {\r\n        [GameMode.Classic]: {\r\n            levels: [\r\n                {\r\n                    level: 1,\r\n                    gap: 450,\r\n                    minSpeed: 500,\r\n                    maxSpeed: 700,\r\n                    acceleration: 100,\r\n                    recoverTime: 5.0,\r\n                    toNextLevelTime: 10.0, // Seconds\r\n                },\r\n                {\r\n                    level: 2,\r\n                    gap: 500,\r\n                    minSpeed: 600,\r\n                    maxSpeed: 850,\r\n                    acceleration: 125,\r\n                    recoverTime: 6.0,\r\n                    toNextLevelTime: 15.0, // Seconds\r\n                },\r\n                {\r\n                    level: 3,\r\n                    gap: 550,\r\n                    minSpeed: 700,\r\n                    maxSpeed: 1000,\r\n                    acceleration: 150,\r\n                    recoverTime: 7.0,\r\n                    toNextLevelTime: 20.0, // Seconds\r\n                },\r\n                {\r\n                    level: 4,\r\n                    gap: 700,\r\n                    minSpeed: 1000,\r\n                    maxSpeed: 1300,\r\n                    acceleration: 200,\r\n                    recoverTime: 8.0,\r\n                    toNextLevelTime: 30.0, // Seconds\r\n                },\r\n                {\r\n                    level: 5,\r\n                    gap: 900,\r\n                    minSpeed: 1400,\r\n                    maxSpeed: 1700,\r\n                    acceleration: 300,\r\n                    recoverTime: 9.0,\r\n                    toNextLevelTime: 15.0, // Seconds\r\n                },\r\n            ],\r\n        },\r\n        [GameMode.Extreme]: {\r\n            levels: [\r\n                {\r\n                    level: 1,\r\n                    gap: 550,\r\n                    minSpeed: 700,\r\n                    maxSpeed: 1000,\r\n                    acceleration: 150,\r\n                    recoverTime: 7.0,\r\n                    toNextLevelTime: 10.0, // Seconds\r\n                },\r\n                {\r\n                    level: 2,\r\n                    gap: 700,\r\n                    minSpeed: 1000,\r\n                    maxSpeed: 1300,\r\n                    acceleration: 200,\r\n                    recoverTime: 8.0,\r\n                    toNextLevelTime: 20.0, // Seconds\r\n                },\r\n                {\r\n                    level: 3,\r\n                    gap: 900,\r\n                    minSpeed: 1400,\r\n                    maxSpeed: 1700,\r\n                    acceleration: 300,\r\n                    recoverTime: 9.0,\r\n                    toNextLevelTime: 15.0, // Seconds\r\n                },\r\n            ],\r\n        },\r\n        [GameMode.Estelle]: {\r\n            levels: [\r\n                {\r\n                    level: 1,\r\n                    gap: 450,\r\n                    minSpeed: 500,\r\n                    maxSpeed: 700,\r\n                    acceleration: 100,\r\n                    recoverTime: 5.0,\r\n                    toNextLevelTime: 10.0, // Seconds\r\n                },\r\n                {\r\n                    level: 2,\r\n                    gap: 500,\r\n                    minSpeed: 600,\r\n                    maxSpeed: 850,\r\n                    acceleration: 125,\r\n                    recoverTime: 6.0,\r\n                    toNextLevelTime: 15.0, // Seconds\r\n                },\r\n                {\r\n                    level: 3,\r\n                    gap: 550,\r\n                    minSpeed: 700,\r\n                    maxSpeed: 1000,\r\n                    acceleration: 150,\r\n                    recoverTime: 7.0,\r\n                    toNextLevelTime: 20.0, // Seconds\r\n                },\r\n                {\r\n                    level: 4,\r\n                    gap: 700,\r\n                    minSpeed: 1000,\r\n                    maxSpeed: 1300,\r\n                    acceleration: 200,\r\n                    recoverTime: 8.0,\r\n                    toNextLevelTime: 30.0, // Seconds\r\n                },\r\n                {\r\n                    level: 5,\r\n                    gap: 900,\r\n                    minSpeed: 1400,\r\n                    maxSpeed: 1700,\r\n                    acceleration: 300,\r\n                    recoverTime: 9.0,\r\n                    toNextLevelTime: 15.0, // Seconds\r\n                },\r\n            ],\r\n        },\r\n    },\r\n};\r\nexport default GameSettings;\r\n","export var Texture;\r\n(function (Texture) {\r\n    Texture[\"TitleScreen\"] = \"titlescreen\";\r\n    Texture[\"GameOverScreen\"] = \"gameoverscreen\";\r\n    Texture[\"Bamiko\"] = \"bamiko\";\r\n    Texture[\"Yuri\"] = \"yuri\";\r\n    Texture[\"Estelle\"] = \"estelle\";\r\n    Texture[\"Object\"] = \"object\";\r\n    Texture[\"Ground\"] = \"ground\";\r\n    Texture[\"BuildingTop\"] = \"buildingtop\";\r\n    Texture[\"BuildingBottom\"] = \"buildingbottom\";\r\n    Texture[\"BuildingInside\"] = \"buildinginside\";\r\n    Texture[\"Sky\"] = \"sky\";\r\n    Texture[\"BGBuildingFront\"] = \"bgbuildingfront\";\r\n    Texture[\"BGBuildingBack\"] = \"bgbuildingback\";\r\n})(Texture || (Texture = {}));\r\nexport var Frame;\r\n(function (Frame) {\r\n    Frame[\"Box\"] = \"box\";\r\n    Frame[\"Window\"] = \"window\";\r\n    Frame[\"BillBoard\"] = \"billboard\";\r\n    Frame[\"Platform\"] = \"platform\";\r\n    Frame[\"VolumeButtonOn\"] = \"volume_button_on\";\r\n    Frame[\"VolumeButtonOff\"] = \"volume_button_off\";\r\n    Frame[\"Description1\"] = \"description1\";\r\n    Frame[\"Description2\"] = \"description2\";\r\n    Frame[\"Finger\"] = \"finger\";\r\n})(Frame || (Frame = {}));\r\n","import Phaser from 'phaser';\r\nimport { Texture } from 'src/types/image';\r\nconst BACKGROUND_LIST = [\r\n    {\r\n        scrollX: 0.1,\r\n        scrollY: 0.1,\r\n        texture: Texture.Sky,\r\n    },\r\n    {\r\n        scrollX: 0.25,\r\n        scrollY: 0.25,\r\n        texture: Texture.BGBuildingBack,\r\n    },\r\n    {\r\n        scrollX: 0.5,\r\n        scrollY: 0.5,\r\n        texture: Texture.BGBuildingFront,\r\n    },\r\n];\r\nexport default class Background extends Phaser.GameObjects.Container {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.backgrounds = [];\r\n        this.initializeComponents();\r\n        this.scene.add.existing(this);\r\n        this.scene.events.on('update', this.update, this);\r\n    }\r\n    initializeComponents() {\r\n        BACKGROUND_LIST.forEach((background) => {\r\n            const { scrollY, texture, frame } = background;\r\n            const tileSprite = this.createTileSprite(scrollY, texture, frame);\r\n            this.add(tileSprite);\r\n            this.backgrounds.push(Object.assign(Object.assign({}, background), { tileSprite }));\r\n        });\r\n    }\r\n    createTileSprite(scrollY, texture, frame) {\r\n        const { width, height } = this.scene.scale;\r\n        const { height: tileHeight } = this.scene.textures.getFrame(texture, frame);\r\n        const tileSprite = this.scene.add.tileSprite(0, height, width, tileHeight, texture, frame);\r\n        tileSprite\r\n            .setOrigin(0, 1)\r\n            .setScrollFactor(0, scrollY);\r\n        return tileSprite;\r\n    }\r\n    update() {\r\n        for (let i = 0; i < this.backgrounds.length; i++) {\r\n            const { scrollX, tileSprite } = this.backgrounds[i];\r\n            tileSprite.tilePositionX = this.scene.cameras.main.scrollX * scrollX;\r\n        }\r\n    }\r\n    destroy(fromScene) {\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n        this.scene.events.off('update', this.update);\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","export var Music;\r\n(function (Music) {\r\n    Music[\"Title\"] = \"title\";\r\n    Music[\"Bamibalt\"] = \"bamibalt\";\r\n    Music[\"Yuri\"] = \"yuri\";\r\n    Music[\"Estelle\"] = \"estelle\";\r\n    Music[\"GameOver\"] = \"gameover\";\r\n})(Music || (Music = {}));\r\nexport var SFX;\r\n(function (SFX) {\r\n    SFX[\"WindowCrash\"] = \"windowcrash\";\r\n    SFX[\"Jump\"] = \"jump\";\r\n    SFX[\"Collision\"] = \"collision\";\r\n    SFX[\"Splat\"] = \"splat\";\r\n    SFX[\"Land\"] = \"land\";\r\n    SFX[\"Plane\"] = \"plane\";\r\n    SFX[\"ButtonClick\"] = \"buttonclick\";\r\n    SFX[\"Fall\"] = \"fall\";\r\n    SFX[\"Warning\"] = \"warning\";\r\n    SFX[\"Select\"] = \"select\";\r\n    SFX[\"RunAway\"] = \"runaway\";\r\n})(SFX || (SFX = {}));\r\n","var ZIndex;\r\n(function (ZIndex) {\r\n    ZIndex[ZIndex[\"Sky\"] = 0] = \"Sky\";\r\n    ZIndex[ZIndex[\"Background\"] = 1] = \"Background\";\r\n    ZIndex[ZIndex[\"BuildingInside\"] = 10] = \"BuildingInside\";\r\n    ZIndex[ZIndex[\"Building\"] = 11] = \"Building\";\r\n    ZIndex[ZIndex[\"Ground\"] = 15] = \"Ground\";\r\n    ZIndex[ZIndex[\"BillboardPicture\"] = 19] = \"BillboardPicture\";\r\n    ZIndex[ZIndex[\"Obstacles\"] = 20] = \"Obstacles\";\r\n    ZIndex[ZIndex[\"Bamiko\"] = 100] = \"Bamiko\";\r\n    ZIndex[ZIndex[\"Yuri\"] = 101] = \"Yuri\";\r\n})(ZIndex || (ZIndex = {}));\r\nexport default ZIndex;\r\n","import Phaser from 'phaser';\r\nimport GameSettings from 'src/assets/settings';\r\nimport { Texture } from 'src/types/image';\r\nimport { GameMode } from 'src/types/mode';\r\nimport { SFX } from 'src/types/sound';\r\nimport ZIndex from 'src/types/zIndex';\r\nvar JumpState;\r\n(function (JumpState) {\r\n    JumpState[JumpState[\"None\"] = 0] = \"None\";\r\n    JumpState[JumpState[\"Jumping\"] = 1] = \"Jumping\";\r\n    JumpState[JumpState[\"DoubleJumping\"] = 2] = \"DoubleJumping\";\r\n})(JumpState || (JumpState = {}));\r\nconst RUN_ANIMATION_KEY = 'bamiko_run_';\r\nconst JUMP_ANIMATION_KEY = 'bamiko_jump_';\r\nconst OUCH_FRAME = 'bamiko_ouch_0000';\r\nconst SPLAT_FRAME = 'bamiko_splat_0000';\r\nexport default class Bamiko extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, difficulty) {\r\n        super(scene, 0, 0, Texture.Bamiko, OUCH_FRAME);\r\n        this.jumpState = JumpState.None;\r\n        this.currentJumpTime = 0;\r\n        this.isDamaged = false;\r\n        this.isDead = false;\r\n        this.currentRecoverTime = 0;\r\n        this.hasDoubleJump = true;\r\n        this.wasGrounded = false;\r\n        this.difficulty = difficulty;\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this, false);\r\n        this.setOrigin(0.5, 0.5)\r\n            .setDepth(ZIndex.Bamiko);\r\n        this.body.setSize(60, 130, false)\r\n            .setOffset(30, 35);\r\n        this.body.velocity.x = this.difficulty.getDifficultySettings().minSpeed;\r\n        this.scene.anims.create({\r\n            key: RUN_ANIMATION_KEY,\r\n            frames: this.scene.anims.generateFrameNames(Texture.Bamiko, {\r\n                prefix: RUN_ANIMATION_KEY, end: 7, zeroPad: 4,\r\n            }),\r\n            frameRate: 12,\r\n            repeat: -1,\r\n        });\r\n        this.scene.anims.create({\r\n            key: JUMP_ANIMATION_KEY,\r\n            frames: this.scene.anims.generateFrameNames(Texture.Bamiko, {\r\n                prefix: JUMP_ANIMATION_KEY, end: 2, zeroPad: 4,\r\n            }),\r\n            frameRate: 12,\r\n        });\r\n        this.scene.input.on('pointerdown', this.jump, this);\r\n        this.scene.input.on('pointerup', this.stopJumping, this);\r\n        this.scene.events.on('update', this.update, this);\r\n        this.play(RUN_ANIMATION_KEY);\r\n        this.isExtremeMode = this.scene.registry.get('mode') === GameMode.Extreme;\r\n    }\r\n    get isGrounded() {\r\n        if (!this.body) {\r\n            return false;\r\n        }\r\n        return this.body.blocked.down;\r\n    }\r\n    jump() {\r\n        if (this.isDead) {\r\n            return;\r\n        }\r\n        if (this.isGrounded) {\r\n            this.jumpState = JumpState.Jumping;\r\n            this.scene.sound.play(SFX.Jump);\r\n            this.body.velocity.y = -GameSettings.bamiko.jumpVelocity;\r\n        }\r\n        else if (this.hasDoubleJump) {\r\n            this.jumpState = JumpState.DoubleJumping;\r\n            this.hasDoubleJump = false;\r\n            this.scene.sound.play(SFX.Jump, { detune: 500 });\r\n            this.body.velocity.y = -GameSettings.bamiko.doubleJumpVelocity;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        if (!this.damageTween) {\r\n            this.play(JUMP_ANIMATION_KEY);\r\n        }\r\n    }\r\n    stopJumping() {\r\n        this.jumpState = JumpState.None;\r\n        this.currentJumpTime = 0;\r\n    }\r\n    takeDamage() {\r\n        var _a;\r\n        if (this.isDead) {\r\n            return;\r\n        }\r\n        this.scene.sound.play(SFX.Collision);\r\n        const { minSpeed } = this.difficulty.getDifficultySettings();\r\n        if (this.isDamaged || this.isExtremeMode) {\r\n            this.die();\r\n            this.setFrame(OUCH_FRAME);\r\n            this.emit('damagedeath');\r\n            return;\r\n        }\r\n        (_a = this.damageTween) === null || _a === void 0 ? void 0 : _a.stop();\r\n        this.damageTween = this.scene.tweens.add({\r\n            targets: this,\r\n            scale: 1,\r\n            duration: 50,\r\n            repeat: 8,\r\n            yoyo: true,\r\n            onStart: () => {\r\n                this.stop();\r\n                this.setFrame(OUCH_FRAME);\r\n                this.setTintFill(0xffffff);\r\n            },\r\n            onRepeat: () => {\r\n                this.setTintFill(0xffffff);\r\n            },\r\n            onYoyo: () => {\r\n                this.clearTint();\r\n            },\r\n            onComplete: () => {\r\n                this.clearTint();\r\n                this.damageTween = null;\r\n                if (this.isGrounded) {\r\n                    this.play(RUN_ANIMATION_KEY);\r\n                }\r\n                else {\r\n                    this.play(JUMP_ANIMATION_KEY);\r\n                }\r\n            },\r\n        });\r\n        this.isDamaged = true;\r\n        this.body.velocity.x = minSpeed;\r\n        this.emit('damaged');\r\n    }\r\n    splat(x) {\r\n        if (this.isDead) {\r\n            return;\r\n        }\r\n        this.scene.sound.play(SFX.Splat);\r\n        this.die();\r\n        this.setX(x - this.width / 2 + 8);\r\n        this.setFrame(SPLAT_FRAME);\r\n        this.emit('splatdeath');\r\n    }\r\n    die() {\r\n        this.stop();\r\n        this.isDead = true;\r\n        this.scene.physics.world.remove(this.body);\r\n    }\r\n    update(time, delta) {\r\n        if (this.isDead) {\r\n            return;\r\n        }\r\n        const deltaTime = delta / 1000;\r\n        this.updatePhysics(deltaTime);\r\n        this.updateRecoverTime(deltaTime);\r\n    }\r\n    updatePhysics(deltaTime) {\r\n        const { maxSpeed, acceleration } = this.difficulty.getDifficultySettings();\r\n        if (this.body.position.y > this.scene.scale.gameSize.height + this.body.height) {\r\n            this.scene.sound.play(SFX.Fall);\r\n            this.die();\r\n            this.emit('falldeath');\r\n            return;\r\n        }\r\n        if (!this.wasGrounded && this.isGrounded) {\r\n            this.hasDoubleJump = true;\r\n            this.scene.sound.play(SFX.Land);\r\n            if (!this.damageTween) {\r\n                this.play(RUN_ANIMATION_KEY);\r\n            }\r\n        }\r\n        else if (this.wasGrounded && !this.isGrounded) {\r\n            if (!this.damageTween) {\r\n                this.play(JUMP_ANIMATION_KEY);\r\n            }\r\n        }\r\n        this.wasGrounded = this.isGrounded;\r\n        if (!this.isDamaged) {\r\n            this.body.velocity.x += acceleration * deltaTime;\r\n        }\r\n        this.body.velocity.x = Phaser.Math.Clamp(this.body.velocity.x, 0, maxSpeed);\r\n        this.anims.timeScale = Phaser.Math.Clamp(this.body.velocity.x / 800, 1, 1.75);\r\n        if (this.jumpState === JumpState.None) {\r\n            return;\r\n        }\r\n        this.currentJumpTime += deltaTime;\r\n        const jumpEndTime = this.jumpState === JumpState.Jumping\r\n            ? GameSettings.bamiko.maxJumpDuration\r\n            : GameSettings.bamiko.maxDoubleJumpDuration;\r\n        if (this.currentJumpTime >= jumpEndTime) {\r\n            this.stopJumping();\r\n            return;\r\n        }\r\n        this.body.velocity.y = this.jumpState === JumpState.Jumping\r\n            ? -GameSettings.bamiko.jumpVelocity\r\n            : -GameSettings.bamiko.doubleJumpVelocity;\r\n    }\r\n    updateRecoverTime(deltaTime) {\r\n        const { recoverTime } = this.difficulty.getDifficultySettings();\r\n        if (!this.isDamaged) {\r\n            return;\r\n        }\r\n        this.currentRecoverTime += deltaTime;\r\n        if (this.currentRecoverTime >= recoverTime) {\r\n            this.isDamaged = false;\r\n            this.currentRecoverTime = 0;\r\n            this.emit('recover');\r\n        }\r\n    }\r\n    destroy(fromScene) {\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n        this.scene.input.off('pointerdown', this.jump);\r\n        this.scene.input.off('pointerup', this.stopJumping);\r\n        this.scene.events.off('update', this.update);\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","import Phaser from 'phaser';\r\nimport GameSettings from 'src/assets/settings';\r\nexport default class Difficulty extends Phaser.GameObjects.Container {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.currentTime = 0;\r\n        this.currentLevel = 1;\r\n        this.scene.add.existing(this);\r\n        this.scene.events.on('update', this.update, this);\r\n    }\r\n    update(time, delta) {\r\n        if (this.currentLevel === this.getMaxLevel()) {\r\n            return;\r\n        }\r\n        const deltaTime = delta / 1000;\r\n        this.currentTime += deltaTime;\r\n        if (this.currentTime > this.getDifficultySettings().toNextLevelTime) {\r\n            this.currentLevel++;\r\n            this.currentTime = 0;\r\n            this.emit('levelup', this.currentLevel);\r\n        }\r\n    }\r\n    getDifficultySettings() {\r\n        return GameSettings.difficulty[this.scene.registry.get('mode')].levels[this.currentLevel - 1];\r\n    }\r\n    getMaxLevel() {\r\n        return GameSettings.difficulty[this.scene.registry.get('mode')].levels.length;\r\n    }\r\n    destroy(fromScene) {\r\n        this.scene.events.off('update', this.update);\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","import Phaser from 'phaser';\r\nimport { GameMode } from 'src/types/mode';\r\nimport { Music } from 'src/types/sound';\r\nexport default class MusicPlayer extends Phaser.GameObjects.Container {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.initializeComponents();\r\n        this.scene.add.existing(this);\r\n        this.play();\r\n        this.yuriTheme.pause();\r\n    }\r\n    initializeComponents() {\r\n        const isEstelleMode = this.scene.registry.get('mode') === GameMode.Estelle;\r\n        this.bamibalt = this.scene.sound.add(isEstelleMode ? Music.Estelle : Music.Bamibalt, { loop: true });\r\n        this.yuriTheme = this.scene.sound.add(Music.Yuri, { loop: true, volume: 0 });\r\n    }\r\n    getFadeInTween(target) {\r\n        return this.scene.tweens.add({\r\n            targets: target,\r\n            volume: 1,\r\n            duration: 500,\r\n        });\r\n    }\r\n    getFadeOutTween(target) {\r\n        return this.scene.tweens.add({\r\n            targets: target,\r\n            volume: 0,\r\n            duration: 500,\r\n            onComplete: () => {\r\n                target.pause();\r\n            },\r\n        });\r\n    }\r\n    stopFadeTweens() {\r\n        var _a, _b;\r\n        (_a = this.bamibaltFadeTween) === null || _a === void 0 ? void 0 : _a.stop();\r\n        (_b = this.yuriThemeFadeTween) === null || _b === void 0 ? void 0 : _b.stop();\r\n    }\r\n    play() {\r\n        this.bamibalt.play();\r\n        this.yuriTheme.play();\r\n    }\r\n    switchToYuriTheme() {\r\n        this.stopFadeTweens();\r\n        this.yuriTheme.resume();\r\n        this.bamibaltFadeTween = this.getFadeOutTween(this.bamibalt);\r\n        this.yuriThemeFadeTween = this.getFadeInTween(this.yuriTheme);\r\n    }\r\n    switchToBamibaltTheme() {\r\n        this.stopFadeTweens();\r\n        this.bamibalt.resume();\r\n        this.bamibaltFadeTween = this.getFadeInTween(this.bamibalt);\r\n        this.yuriThemeFadeTween = this.getFadeOutTween(this.yuriTheme);\r\n    }\r\n    stop() {\r\n        this.bamibalt.stop();\r\n        this.yuriTheme.stop();\r\n    }\r\n    destroy(fromScene) {\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n        this.stop();\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","export default class Pool {\r\n    constructor(T, { initCount = 0, defaultArgs, }) {\r\n        this.pool = [];\r\n        this.create = () => new T(...defaultArgs).kill();\r\n        for (let i = 0; i < initCount; i++) {\r\n            const object = this.create();\r\n            this.pool.push(object);\r\n        }\r\n    }\r\n    get(x, y, config) {\r\n        const object = this.pool.length ? this.pool.pop() : this.create();\r\n        object.reset(x, y, config);\r\n        return object;\r\n    }\r\n    return(object) {\r\n        object.kill();\r\n        this.pool.push(object);\r\n    }\r\n}\r\n","import Pool from 'src/components/objectPool/pool';\r\nexport default class BaseObstaclePool extends Pool {\r\n    constructor(scene, T, bamiko) {\r\n        super(T, {\r\n            initCount: 0,\r\n            defaultArgs: [scene, bamiko],\r\n        });\r\n        this.bamiko = bamiko;\r\n    }\r\n    get(x, y, config) {\r\n        const obstacle = super.get(x, y, config);\r\n        obstacle.once('expired', () => {\r\n            this.return(obstacle);\r\n        });\r\n        this.group.add(obstacle);\r\n        return obstacle;\r\n    }\r\n    return(object) {\r\n        super.return(object);\r\n        object.removeAllListeners('expired');\r\n        this.group.remove(object);\r\n    }\r\n}\r\n","import Phaser from 'phaser';\r\nexport default class BaseObstacle extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, bamiko) {\r\n        super(scene, 0, 0, '');\r\n        this.handleUpdate = () => this.update();\r\n        this.name = `${Phaser.Math.Between(1, 100000000)}`;\r\n        this.bamiko = bamiko;\r\n        this.initialize();\r\n        this.scene.add.existing(this);\r\n    }\r\n    update() {\r\n        if (!this.bamiko) {\r\n            return;\r\n        }\r\n        if (this.bamiko.body.position.x > this.x + this.width + this.scene.scale.gameSize.width) {\r\n            this.emit('expired');\r\n        }\r\n    }\r\n    kill() {\r\n        if (!this.active) {\r\n            return this;\r\n        }\r\n        this.scene.events.off('update', this.handleUpdate);\r\n        this.scene.physics.world.remove(this.body);\r\n        this.setActive(false);\r\n        this.setVisible(false);\r\n        return this;\r\n    }\r\n    reset(x, y, config) {\r\n        if (this.active) {\r\n            return this;\r\n        }\r\n        this.setPosition(x, y);\r\n        this.setActive(true);\r\n        this.setVisible(true);\r\n        this.scene.physics.world.add(this.body);\r\n        this.body.reset(x, y);\r\n        this.scene.events.on('update', this.handleUpdate);\r\n        return this;\r\n    }\r\n    destroy(fromScene) {\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n        this.scene.events.off('update', this.handleUpdate);\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","import BaseObstacle from 'src/components/game/obstacles/base';\r\nimport { Frame, Texture } from 'src/types/image';\r\nimport ZIndex from 'src/types/zIndex';\r\nexport default class BoxObstacle extends BaseObstacle {\r\n    initialize() {\r\n        this\r\n            .setTexture(Texture.Object, Frame.Box)\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.Obstacles);\r\n        this.scene.physics.add.existing(this, false);\r\n        this.body.setSize(80, 90, false)\r\n            .setOffset(10, 10);\r\n        this.particle = this.scene.add.particles(Texture.Object, Frame.Box)\r\n            .setDepth(ZIndex.Obstacles);\r\n        this.emitter = this.particle.createEmitter({\r\n            quantity: 1,\r\n            angle: { min: -45, max: -30 },\r\n            speed: { min: 400, max: 1000 },\r\n            rotate: { start: 0, end: 720 },\r\n            gravityY: 3000,\r\n            lifespan: { min: 1000, max: 2000 },\r\n            frequency: -1,\r\n        });\r\n    }\r\n    crash(speed) {\r\n        this.emitter.setSpeed({ min: speed, max: speed * 2 });\r\n        this.particle.emitParticleAt(this.x + this.width / 2, this.y + this.height / 2);\r\n    }\r\n}\r\n","import BaseObstaclePool from 'src/components/game/obstaclePool/base';\r\nimport BoxObstacle from 'src/components/game/obstacles/box';\r\nexport default class BoxObstaclePool extends BaseObstaclePool {\r\n    constructor(scene, bamiko) {\r\n        super(scene, BoxObstacle, bamiko);\r\n        this.group = scene.physics.add.group();\r\n        scene.physics.add.overlap(bamiko, this.group, (player, box) => {\r\n            box.crash(player.body.velocity.x);\r\n            this.return(box);\r\n            this.bamiko.takeDamage();\r\n        });\r\n    }\r\n}\r\n","export default class BaseObstacleGroup {\r\n    constructor(scene, bamiko, difficulty) {\r\n        this.scene = scene;\r\n        this.bamiko = bamiko;\r\n        this.difficulty = difficulty;\r\n    }\r\n}\r\n","import BaseObstacle from 'src/components/game/obstacles/base';\r\nimport { Texture } from 'src/types/image';\r\nimport ZIndex from 'src/types/zIndex';\r\nexport default class GroundObstacle extends BaseObstacle {\r\n    initialize() {\r\n        this\r\n            .setTexture(Texture.Ground)\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.Ground);\r\n        this.scene.physics.add.existing(this, true);\r\n    }\r\n}\r\n","import BaseObstaclePool from 'src/components/game/obstaclePool/base';\r\nimport GroundObstacle from 'src/components/game/obstacles/ground';\r\nexport default class GroundObstaclePool extends BaseObstaclePool {\r\n    constructor(scene, bamiko) {\r\n        super(scene, GroundObstacle, bamiko);\r\n        this.group = scene.physics.add.staticGroup();\r\n        scene.physics.add.collider(bamiko, this.group, (player, ground) => {\r\n            if (player.body.touching.right) {\r\n                bamiko.splat(ground.body.x);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import BoxObstaclePool from 'src/components/game/obstaclePool/box';\r\nimport BaseObstacleGroup from 'src/components/game/obstacleGroup/base';\r\nimport GroundObstaclePool from 'src/components/game/obstaclePool/ground';\r\nexport default class BoxObstacleGroup extends BaseObstacleGroup {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.width = 2000;\r\n        this.groundPool = new GroundObstaclePool(this.scene, this.bamiko);\r\n        this.boxPool = new BoxObstaclePool(this.scene, this.bamiko);\r\n    }\r\n    spawn(x, y) {\r\n        const ground = this.groundPool.get(x, y);\r\n        const box = this.boxPool.get(x + Phaser.Math.Between(500, 1500), y - 100);\r\n        this.scene.physics.add.collider(ground, box);\r\n    }\r\n}\r\n","import GameSettings from 'src/assets/settings';\r\nimport BaseObstacle from 'src/components/game/obstacles/base';\r\nimport { Texture } from 'src/types/image';\r\nimport ZIndex from 'src/types/zIndex';\r\nexport default class BuildingObstacle extends BaseObstacle {\r\n    initialize() {\r\n        const buildingInside = this.scene.add.sprite(0, 0, Texture.BuildingInside)\r\n            .setOrigin(0, 0.5)\r\n            .setDepth(ZIndex.BuildingInside);\r\n        const buildingTop = this.scene.add.sprite(0, 0, Texture.BuildingTop)\r\n            .setOrigin(0, 1)\r\n            .setDepth(ZIndex.Building);\r\n        this\r\n            .setTexture(Texture.BuildingBottom)\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.Building);\r\n        this.buildingTop = buildingTop;\r\n        this.buildingInside = buildingInside;\r\n        this.scene.physics.add.existing(this, true);\r\n        this.scene.physics.add.existing(this.buildingTop, true);\r\n        this.scene.physics.add.collider(this.bamiko, this, (player) => {\r\n            if (player.body.touching.right) {\r\n                this.bamiko.splat(this.x);\r\n            }\r\n        });\r\n        this.scene.physics.add.collider(this.bamiko, this.buildingTop, (player) => {\r\n            if (player.body.touching.right) {\r\n                this.bamiko.splat(this.x);\r\n            }\r\n        });\r\n    }\r\n    kill() {\r\n        this.scene.physics.world.remove(this.buildingTop.body);\r\n        this.buildingTop.setActive(false);\r\n        this.buildingTop.setVisible(false);\r\n        this.buildingInside.setActive(false);\r\n        this.buildingInside.setVisible(false);\r\n        return super.kill();\r\n    }\r\n    reset(x, y) {\r\n        const { height } = GameSettings.obstacle.building;\r\n        this.buildingTop.setPosition(x, y - height);\r\n        this.buildingTop.setActive(true);\r\n        this.buildingTop.setVisible(true);\r\n        this.buildingInside.setPosition(x, y - height / 2);\r\n        this.buildingInside.setActive(true);\r\n        this.buildingInside.setVisible(true);\r\n        this.scene.physics.world.add(this.buildingTop.body);\r\n        this.buildingTop.body.reset(x, y - height);\r\n        return super.reset(x, y);\r\n    }\r\n}\r\n","import BaseObstaclePool from 'src/components/game/obstaclePool/base';\r\nimport BuildingObstacle from 'src/components/game/obstacles/building';\r\nexport default class BuildingObstaclePool extends BaseObstaclePool {\r\n    constructor(scene, bamiko) {\r\n        super(scene, BuildingObstacle, bamiko);\r\n        this.group = scene.physics.add.staticGroup();\r\n        scene.physics.add.collider(bamiko, this.group, (player, building) => {\r\n            if (player.body.touching.right) {\r\n                bamiko.splat(building.body.x);\r\n            }\r\n        });\r\n    }\r\n    get(x, y, config) {\r\n        const building = super.get(x, y, config);\r\n        this.group.add(building.buildingTop);\r\n        return building;\r\n    }\r\n    return(object) {\r\n        this.group.remove(object.buildingTop);\r\n        super.return(object);\r\n    }\r\n}\r\n","import BaseObstacle from 'src/components/game/obstacles/base';\r\nimport { Frame, Texture } from 'src/types/image';\r\nimport { SFX } from 'src/types/sound';\r\nimport ZIndex from 'src/types/zIndex';\r\nexport default class WindowObstacle extends BaseObstacle {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isCrashed = false;\r\n    }\r\n    initialize() {\r\n        this\r\n            .setTexture(Texture.Object, Frame.Window)\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.Obstacles);\r\n        this.scene.physics.add.existing(this, true);\r\n        this.particle = this.scene.add.particles(Texture.Object)\r\n            .setDepth(ZIndex.Obstacles);\r\n        this.emitter = this.particle.createEmitter({\r\n            frame: [0, 1, 2, 3, 4].map((i) => `window_shard_0${i}`),\r\n            quantity: 20,\r\n            angle: { min: -45, max: 0 },\r\n            speed: { min: 400, max: 1000 },\r\n            rotate: { start: 0, end: 720 },\r\n            gravityY: 3000,\r\n            lifespan: { min: 1000, max: 2000 },\r\n            frequency: -1,\r\n        });\r\n    }\r\n    crash(speed) {\r\n        if (this.isCrashed) {\r\n            return;\r\n        }\r\n        this.scene.sound.play(SFX.WindowCrash, {\r\n            volume: Phaser.Math.RND.realInRange(0.5, 0.75),\r\n            detune: Phaser.Math.Between(-2, 4) * 50,\r\n        });\r\n        this.setVisible(false);\r\n        this.emitter.setEmitZone({ type: 'random', source: this.getBounds() });\r\n        this.emitter.setSpeed({ min: speed, max: speed * 2 });\r\n        this.particle.emitParticle();\r\n        this.isCrashed = true;\r\n    }\r\n    reset(x, y) {\r\n        this.isCrashed = false;\r\n        return super.reset(x, y);\r\n    }\r\n}\r\n","import BaseObstaclePool from 'src/components/game/obstaclePool/base';\r\nimport WindowObstacle from 'src/components/game/obstacles/window';\r\nexport default class WindowObstaclePool extends BaseObstaclePool {\r\n    constructor(scene, bamiko) {\r\n        super(scene, WindowObstacle, bamiko);\r\n        this.group = scene.physics.add.staticGroup();\r\n        scene.physics.add.overlap(bamiko, this.group, (player, window) => {\r\n            window.crash(player.body.velocity.x);\r\n        });\r\n    }\r\n}\r\n","import GameSettings from 'src/assets/settings';\r\nimport BaseObstacleGroup from 'src/components/game/obstacleGroup/base';\r\nimport BuildingObstaclePool from 'src/components/game/obstaclePool/building';\r\nimport WindowObstaclePool from 'src/components/game/obstaclePool/window';\r\nexport default class BuildingObstacleGroup extends BaseObstacleGroup {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.width = 2500;\r\n        this.buildingPool = new BuildingObstaclePool(this.scene, this.bamiko);\r\n        this.windowPool = new WindowObstaclePool(this.scene, this.bamiko);\r\n    }\r\n    spawn(x, y) {\r\n        const { height } = GameSettings.obstacle.building;\r\n        this.buildingPool.get(x, y);\r\n        this.windowPool.get(x, y - height);\r\n        this.windowPool.get(x + this.width - 10, y - height);\r\n    }\r\n}\r\n","import BaseObstacleGroup from 'src/components/game/obstacleGroup/base';\r\nimport GroundObstaclePool from 'src/components/game/obstaclePool/ground';\r\nexport default class GroundObstacleGroup extends BaseObstacleGroup {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.width = 2000;\r\n        this.groundPool = new GroundObstaclePool(this.scene, this.bamiko);\r\n    }\r\n    spawn(x, y) {\r\n        this.groundPool.get(x, y);\r\n    }\r\n}\r\n","import BaseObstacle from 'src/components/game/obstacles/base';\r\nimport { Texture } from 'src/types/image';\r\nimport { SFX } from 'src/types/sound';\r\nimport ZIndex from 'src/types/zIndex';\r\nconst FLY_ANIMATION_KEY = 'estelle_fly_';\r\nconst HURT_FRAME = 'estelle_hurt_0000';\r\nexport default class PlaneObstacle extends BaseObstacle {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isFlying = false;\r\n    }\r\n    initialize() {\r\n        this\r\n            .setTexture(Texture.Estelle, HURT_FRAME)\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.Obstacles);\r\n        this.scene.physics.add.existing(this, false);\r\n        this.body.setSize(200, 90, false)\r\n            .setOffset(40, 20);\r\n        this.scene.anims.create({\r\n            key: FLY_ANIMATION_KEY,\r\n            frames: this.scene.anims.generateFrameNames(Texture.Estelle, {\r\n                prefix: FLY_ANIMATION_KEY, end: 2, zeroPad: 4,\r\n            }),\r\n            frameRate: 12,\r\n            repeat: -1,\r\n        });\r\n        this.particle = this.scene.add.particles(Texture.Estelle, HURT_FRAME)\r\n            .setDepth(ZIndex.Obstacles);\r\n        this.emitter = this.particle.createEmitter({\r\n            quantity: 1,\r\n            angle: { min: -45, max: -30 },\r\n            speed: { min: 400, max: 1000 },\r\n            rotate: { start: 0, end: 360 * 8 },\r\n            gravityY: 3000,\r\n            lifespan: { min: 2000, max: 4000 },\r\n            frequency: -1,\r\n        });\r\n    }\r\n    crash(speed) {\r\n        this.emitter.setSpeed({ min: speed, max: speed * 2 });\r\n        this.particle.emitParticleAt(this.x + this.width / 2, this.y + this.height / 2);\r\n    }\r\n    update() {\r\n        if (!this.bamiko) {\r\n            return;\r\n        }\r\n        if (this.bamiko.body.position.x > this.x + this.width + this.scene.scale.gameSize.width) {\r\n            this.emit('expired');\r\n        }\r\n        if (this.isFlying) {\r\n            return;\r\n        }\r\n        if (this.x < this.bamiko.body.position.x + this.scene.scale.gameSize.width) {\r\n            this.scene.sound.play(SFX.Plane, { detune: this.isAbove ? 300 : 0 });\r\n            this.timeline = this.scene.tweens.createTimeline()\r\n                .add({\r\n                targets: this,\r\n                y: this.ground,\r\n                duration: 1000,\r\n                ease: 'Quad.easeOut',\r\n            })\r\n                .add({\r\n                targets: this,\r\n                y: this.y,\r\n                duration: 3000,\r\n                ease: 'Quad.easeIn',\r\n            })\r\n                .add({\r\n                targets: this,\r\n                x: `-=${Phaser.Math.Between(500, 1500)}`,\r\n                duration: 6000,\r\n                offset: 0,\r\n            });\r\n            this.timeline.play();\r\n            this.isFlying = true;\r\n        }\r\n    }\r\n    kill() {\r\n        var _a;\r\n        (_a = this.timeline) === null || _a === void 0 ? void 0 : _a.stop();\r\n        this.stop();\r\n        super.kill();\r\n        return this;\r\n    }\r\n    reset(x, y, { ground, isAbove }) {\r\n        this.isFlying = false;\r\n        this.ground = ground;\r\n        this.isAbove = isAbove;\r\n        this.play(FLY_ANIMATION_KEY);\r\n        return super.reset(x, y);\r\n    }\r\n}\r\n","import BaseObstaclePool from 'src/components/game/obstaclePool/base';\r\nimport PlaneObstacle from 'src/components/game/obstacles/plane';\r\nexport default class PlaneObstaclePool extends BaseObstaclePool {\r\n    constructor(scene, bamiko) {\r\n        super(scene, PlaneObstacle, bamiko);\r\n        this.group = scene.physics.add.group({ allowGravity: false });\r\n        scene.physics.add.overlap(bamiko, this.group, (player, plane) => {\r\n            plane.crash(player.body.velocity.x);\r\n            this.return(plane);\r\n            this.bamiko.takeDamage();\r\n        });\r\n    }\r\n}\r\n","import BaseObstacleGroup from 'src/components/game/obstacleGroup/base';\r\nimport GroundObstaclePool from 'src/components/game/obstaclePool/ground';\r\nimport PlaneObstaclePool from 'src/components/game/obstaclePool/plane';\r\nexport default class PlaneObstacleGroup extends BaseObstacleGroup {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.width = 2000;\r\n        this.groundPool = new GroundObstaclePool(this.scene, this.bamiko);\r\n        this.planePool = new PlaneObstaclePool(this.scene, this.bamiko);\r\n    }\r\n    spawn(x, y) {\r\n        const isAbove = !!Phaser.Math.Between(0, 1);\r\n        const planeOffset = isAbove ? this.bamiko.height + 100 : 100;\r\n        const ground = this.groundPool.get(x, y);\r\n        const plane = this.planePool.get(x + Phaser.Math.Between(500, 1500), y - 1000, {\r\n            ground: y - planeOffset,\r\n            isAbove,\r\n        });\r\n        this.scene.physics.add.collider(ground, plane);\r\n    }\r\n}\r\n","import BaseObstacle from 'src/components/game/obstacles/base';\r\nimport { Frame, Texture } from 'src/types/image';\r\nimport ZIndex from 'src/types/zIndex';\r\nexport default class PlatformObstacle extends BaseObstacle {\r\n    initialize() {\r\n        const billboard = this.scene.add.image(0, 0, Texture.Object, Frame.BillBoard)\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.Obstacles);\r\n        const picture = this.scene.add.image(0, 0, Texture.Object, this.getPictureFrame(1))\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.BillboardPicture)\r\n            .setTint(0xdddddd);\r\n        this\r\n            .setTexture(Texture.Object, Frame.Platform)\r\n            .setOrigin(0, 0)\r\n            .setDepth(ZIndex.Obstacles);\r\n        this.billboard = billboard;\r\n        this.picture = picture;\r\n        this.scene.physics.add.existing(this, true);\r\n        this.body.checkCollision.left = false;\r\n    }\r\n    getPictureFrame(frame) {\r\n        return `billboard_picture_0${frame}`;\r\n    }\r\n    kill() {\r\n        this.billboard.setActive(false);\r\n        this.billboard.setVisible(false);\r\n        this.picture.setActive(false);\r\n        this.picture.setVisible(false);\r\n        return super.kill();\r\n    }\r\n    reset(x, y, frame) {\r\n        this.billboard.setActive(true);\r\n        this.billboard.setVisible(true);\r\n        this.billboard.setPosition(x, y - 340);\r\n        this.picture.setActive(true);\r\n        this.picture.setVisible(true);\r\n        this.picture.setPosition(x, y - 340);\r\n        this.picture.setFrame(this.getPictureFrame(frame));\r\n        return super.reset(x, y);\r\n    }\r\n}\r\n","import BaseObstaclePool from 'src/components/game/obstaclePool/base';\r\nimport PlatformObstacle from 'src/components/game/obstacles/platform';\r\nexport default class PlatformObstaclePool extends BaseObstaclePool {\r\n    constructor(scene, bamiko) {\r\n        super(scene, PlatformObstacle, bamiko);\r\n        this.group = scene.physics.add.staticGroup();\r\n        scene.physics.add.collider(bamiko, this.group, undefined, (player) => player.body.velocity.y >= 0);\r\n    }\r\n}\r\n","import BaseObstacleGroup from 'src/components/game/obstacleGroup/base';\r\nimport PlatformObstaclePool from 'src/components/game/obstaclePool/platform';\r\nexport default class PlatformObstacleGroup extends BaseObstacleGroup {\r\n    constructor(scene, bamiko, difficulty) {\r\n        super(scene, bamiko, difficulty);\r\n        this.width = 0;\r\n        this.frames = [];\r\n        this.currentFrameIndex = 0;\r\n        this.platformPool = new PlatformObstaclePool(this.scene, this.bamiko);\r\n        this.frames = Phaser.Math.RND.shuffle(Array.from({ length: 7 }, (_, i) => i + 1));\r\n    }\r\n    spawn(x, y) {\r\n        const maxLevel = this.difficulty.getMaxLevel();\r\n        const { level, gap } = this.difficulty.getDifficultySettings();\r\n        const numPlatforms = Phaser.Math.Between(1, Math.floor((level / maxLevel) * 3));\r\n        this.width = 0;\r\n        for (let i = 0; i < numPlatforms; i++) {\r\n            const platformHeight = i > 0 ? Phaser.Math.Between(-1, 1) * 100 : 0;\r\n            const platformGap = i > 0 ? Phaser.Math.Between(gap / 2, gap) : 0;\r\n            const frame = this.frames[this.currentFrameIndex];\r\n            this.platformPool.get(x + i * (600 + platformGap), y + platformHeight, frame);\r\n            this.width += 600 + platformGap;\r\n            this.currentFrameIndex = (this.currentFrameIndex + 1) % this.frames.length;\r\n        }\r\n    }\r\n}\r\n","import Phaser from 'phaser';\r\nimport BoxObstacleGroup from 'src/components/game/obstacleGroup/box';\r\nimport BuildingObstacleGroup from 'src/components/game/obstacleGroup/building';\r\nimport GroundObstacleGroup from 'src/components/game/obstacleGroup/ground';\r\nimport PlaneObstacleGroup from 'src/components/game/obstacleGroup/plane';\r\nimport PlatformObstacleGroup from 'src/components/game/obstacleGroup/platform';\r\nimport { GameMode } from 'src/types/mode';\r\nexport default class ObstacleGenerator extends Phaser.GameObjects.Container {\r\n    constructor(scene, { bamiko, difficulty }) {\r\n        super(scene);\r\n        this.currentObstacleX = -300;\r\n        this.currentObstacleY = 800;\r\n        this.obstacleGroups = [];\r\n        this.bamiko = bamiko;\r\n        this.difficulty = difficulty;\r\n        this.obstacleGroups = this.createObstacleGroup();\r\n        this.scene.events.on('update', this.update, this);\r\n    }\r\n    createObstacleGroup() {\r\n        const groundObstacleGroup = new GroundObstacleGroup(this.scene, this.bamiko, this.difficulty);\r\n        const boxObstacleGroup = new BoxObstacleGroup(this.scene, this.bamiko, this.difficulty);\r\n        const buildingObstacleGroup = new BuildingObstacleGroup(this.scene, this.bamiko, this.difficulty);\r\n        const planeObstacleGroup = new PlaneObstacleGroup(this.scene, this.bamiko, this.difficulty);\r\n        const platformObstacleGroup = new PlatformObstacleGroup(this.scene, this.bamiko, this.difficulty);\r\n        const currentMode = this.scene.registry.get('mode');\r\n        // Initial obstacle sequence\r\n        this.spawnObstacle(buildingObstacleGroup, 100);\r\n        this.spawnObstacle(groundObstacleGroup, 800);\r\n        switch (currentMode) {\r\n            case GameMode.Extreme:\r\n                return [\r\n                    groundObstacleGroup,\r\n                    boxObstacleGroup,\r\n                    boxObstacleGroup,\r\n                    boxObstacleGroup,\r\n                    boxObstacleGroup,\r\n                    buildingObstacleGroup,\r\n                    buildingObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    platformObstacleGroup,\r\n                    platformObstacleGroup,\r\n                    platformObstacleGroup,\r\n                ];\r\n            case GameMode.Estelle:\r\n                return [\r\n                    groundObstacleGroup,\r\n                    boxObstacleGroup,\r\n                    buildingObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    platformObstacleGroup,\r\n                ];\r\n            case GameMode.Classic:\r\n            default:\r\n                return [\r\n                    groundObstacleGroup,\r\n                    boxObstacleGroup,\r\n                    boxObstacleGroup,\r\n                    buildingObstacleGroup,\r\n                    buildingObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    planeObstacleGroup,\r\n                    platformObstacleGroup,\r\n                ];\r\n        }\r\n    }\r\n    update() {\r\n        if (this.bamiko.x + this.scene.scale.gameSize.width > this.currentObstacleX) {\r\n            const randomObstacleGroup = Phaser.Math.RND.pick(this.obstacleGroups);\r\n            this.currentObstacleY += Phaser.Math.Between(1, 4) * 50 * Phaser.Math.RND.sign();\r\n            this.currentObstacleY = Phaser.Math.Clamp(this.currentObstacleY, 400, 1000);\r\n            this.spawnObstacle(randomObstacleGroup);\r\n        }\r\n    }\r\n    spawnObstacle(obstacleGroup, y) {\r\n        obstacleGroup.spawn(this.currentObstacleX, y !== null && y !== void 0 ? y : this.currentObstacleY);\r\n        this.currentObstacleX += obstacleGroup.width + this.difficulty.getDifficultySettings().gap;\r\n    }\r\n    destroy(fromScene) {\r\n        this.scene.events.off('update', this.update);\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","import Phaser from 'phaser';\r\nimport GameSettings from 'src/assets/settings';\r\nimport { Texture } from 'src/types/image';\r\nimport ZIndex from 'src/types/zIndex';\r\nconst RUN_ANIMATION_KEY = 'yuri_run_';\r\nconst JUMP_FRAME = 'yuri_jump_0000';\r\nexport default class Yuri extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, bamiko, difficulty) {\r\n        super(scene, -GameSettings.yuri.followDistance, 0, Texture.Yuri);\r\n        this.positions = [];\r\n        this.setDepth(ZIndex.Yuri);\r\n        this.bamiko = bamiko;\r\n        this.difficulty = difficulty;\r\n        this.scene.add.existing(this);\r\n        this.scene.anims.create({\r\n            key: RUN_ANIMATION_KEY,\r\n            frames: this.scene.anims.generateFrameNames(Texture.Yuri, {\r\n                prefix: RUN_ANIMATION_KEY, end: 7, zeroPad: 4,\r\n            }),\r\n            frameRate: 12,\r\n            repeat: -1,\r\n        });\r\n        this.scene.events.on('update', this.update, this);\r\n        this.play(RUN_ANIMATION_KEY);\r\n    }\r\n    update(time, delta) {\r\n        const deltaTime = delta / 1000;\r\n        const fps = 1 / deltaTime;\r\n        this.positions.push(new Phaser.Math.Vector2(this.bamiko.body.position));\r\n        while (this.positions.length > fps) {\r\n            this.positions.shift();\r\n        }\r\n        if (!this.isFollowing) {\r\n            return;\r\n        }\r\n        const nextPosition = this.positions.find(({ x }) => {\r\n            const { followDistance } = GameSettings.yuri;\r\n            return this.bamiko.body.position.x - x <= followDistance;\r\n        });\r\n        if (nextPosition) {\r\n            const { width, height } = this.bamiko.body;\r\n            this.setPosition(nextPosition.x + width / 2, nextPosition.y + height / 2);\r\n        }\r\n    }\r\n    toggleFollow(follow) {\r\n        this.isFollowing = follow;\r\n        if (follow) {\r\n            this.play(RUN_ANIMATION_KEY);\r\n        }\r\n        else {\r\n            this.stop();\r\n            this.setFrame(JUMP_FRAME);\r\n        }\r\n    }\r\n    destroy(fromScene) {\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n        this.scene.events.off('update', this.update);\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","import Phaser from 'phaser';\r\nexport default class BaseScene extends Phaser.Scene {\r\n}\r\n","import TextData from 'src/assets/text.json';\r\nconst numberRegex = /([0-9]+)/g;\r\nconst parameterRegex = /(\\{[0-9]+\\})/g;\r\nexport function getText(key, parameters) {\r\n    const rawText = TextData[key].text;\r\n    const matchedParameterText = rawText.match(parameterRegex);\r\n    let result = rawText;\r\n    if (!matchedParameterText) {\r\n        return result;\r\n    }\r\n    matchedParameterText.forEach((paramText) => {\r\n        var _a;\r\n        const number = (_a = paramText.match(numberRegex)) === null || _a === void 0 ? void 0 : _a[0];\r\n        if (!number) {\r\n            return;\r\n        }\r\n        const arg = parameters === null || parameters === void 0 ? void 0 : parameters[number];\r\n        if (arg === undefined) {\r\n            return;\r\n        }\r\n        result = result.replace(paramText, `${arg}`);\r\n    });\r\n    return result;\r\n}\r\n","import Phaser from 'phaser';\r\nimport { getText } from 'src/types/ui';\r\nexport default class TextComponent extends Phaser.GameObjects.Text {\r\n    constructor(scene, { x = 0, y = 0, key, string = '', style, parameters, }) {\r\n        const text = key ? getText(key, parameters) : string;\r\n        super(scene, x, y, text, Object.assign({ fontFamily: 'Black Han Sans', fontStyle: '400' }, style));\r\n        this.key = key;\r\n        this.parameters = parameters;\r\n        this.scene.add.existing(this);\r\n    }\r\n    setKey(key) {\r\n        this.key = key;\r\n        this.setText(getText(key));\r\n    }\r\n    setParameters(parameters) {\r\n        if (!this.key) {\r\n            return;\r\n        }\r\n        const text = getText(this.key, Object.assign(Object.assign({}, this.parameters), parameters));\r\n        this.setText(text);\r\n    }\r\n}\r\n","import TextComponent from 'src/components/text';\r\nimport BaseScene from 'src/scenes/base';\r\nexport default class GameUIScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: 'GameUIScene',\r\n        });\r\n        GameUIScene.instance = this;\r\n    }\r\n    create() {\r\n        const scoreUI = new TextComponent(this, {\r\n            style: {\r\n                fontSize: '50px',\r\n                color: '#ffffff',\r\n                stroke: '#000000',\r\n                strokeThickness: 7,\r\n            },\r\n        });\r\n        const anchor = this.rexUI.add.anchor(scoreUI, {\r\n            top: '0%+50',\r\n            right: '100%-50',\r\n        });\r\n        this.scoreUI = scoreUI;\r\n        this.anchor = anchor;\r\n        this.toggle(false);\r\n    }\r\n    updateScore(score) {\r\n        this.scoreUI.setText(`${score}m`);\r\n        this.anchor.anchor();\r\n    }\r\n    toggle(on) {\r\n        this.scoreUI.setVisible(on);\r\n    }\r\n}\r\n","import OverlapSizer from 'phaser3-rex-plugins/templates/ui/overlapsizer/OverlapSizer';\r\nexport default class BaseButton extends OverlapSizer {\r\n    constructor(scene, options) {\r\n        super(scene);\r\n        this.isPressed = false;\r\n        this.rexUI = scene.rexUI;\r\n        this.target = this.createUI(options)\r\n            .setInteractive()\r\n            .on('pointerdown', this.handlePointerDown, this)\r\n            .on('pointerup', this.handlePointerUp, this)\r\n            .on('pointerout', this.reset, this);\r\n        this.scene.add.existing(this);\r\n    }\r\n    handlePointerDown() {\r\n        this.onButtonDown();\r\n        this.isPressed = true;\r\n        this.emit('pressed');\r\n    }\r\n    handlePointerUp() {\r\n        if (!this.isPressed) {\r\n            return;\r\n        }\r\n        this.onButtonUp();\r\n        this.isPressed = false;\r\n        this.emit('released');\r\n    }\r\n    toggle(enabled) {\r\n        if (enabled) {\r\n            this.target.setInteractive();\r\n        }\r\n        else {\r\n            this.target.disableInteractive();\r\n            this.reset();\r\n        }\r\n    }\r\n    reset() {\r\n        this.onReset();\r\n        this.isPressed = false;\r\n    }\r\n    destroy(fromScene) {\r\n        this.target.removeInteractive();\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","import BaseButton from 'src/components/buttons/baseButton';\r\nimport { Frame, Texture } from 'src/types/image';\r\nexport default class MuteButton extends BaseButton {\r\n    createUI({ muteColor = 0xaaaaaa, tintColor = 0x444444, }) {\r\n        const image = this.scene.add.image(0, 0, Texture.Object, Frame.VolumeButtonOn);\r\n        this.image = image;\r\n        this.muteColor = muteColor;\r\n        this.tintColor = tintColor;\r\n        this.muted = this.scene.game.sound.mute;\r\n        this.updateButton();\r\n        this.add(image);\r\n        return image;\r\n    }\r\n    toggleMute() {\r\n        this.muted = !this.muted;\r\n        this.scene.game.sound.mute = this.muted;\r\n        this.updateButton();\r\n    }\r\n    updateButton() {\r\n        this.image.setFrame(this.muted ? Frame.VolumeButtonOff : Frame.VolumeButtonOn);\r\n        this.image.setTint(this.muted ? this.muteColor : 0xffffff);\r\n    }\r\n    onButtonDown() {\r\n        this.image.setTint(this.tintColor);\r\n    }\r\n    onButtonUp() {\r\n        this.onReset();\r\n        this.toggleMute();\r\n    }\r\n    onReset() {\r\n        this.updateButton();\r\n    }\r\n}\r\n","import BasePopup from 'src/components/popup/basePopup';\r\nexport default class SizerPopup extends BasePopup {\r\n    constructor(scene, { transition }) {\r\n        super(scene, { closeOnTap: true });\r\n        this.transition = transition;\r\n    }\r\n    initializeComponents(options) {\r\n        super.initializeComponents(options);\r\n        const sizer = this.createContent(options)\r\n            .setVisible(false)\r\n            .layout();\r\n        this.sizer = sizer;\r\n        this.add(sizer);\r\n    }\r\n    open() {\r\n        super.open();\r\n        this.sizer\r\n            .setVisible(true)\r\n            .layout();\r\n        if (this.transition) {\r\n            this.sizer.popUp(100);\r\n        }\r\n    }\r\n    close() {\r\n        super.close();\r\n        this.sizer.setVisible(false);\r\n    }\r\n}\r\n","import ContainerLite from 'phaser3-rex-plugins/plugins/containerlite';\r\nexport default class BasePopup extends ContainerLite {\r\n    constructor(scene, options) {\r\n        super(scene);\r\n        this.rexUI = scene.rexUI;\r\n        this.initializeComponents(options);\r\n        this.setDepth(1000);\r\n        this.scene.add.existing(this);\r\n        this.rexUI.add.anchor(this, {\r\n            x: 'center',\r\n            y: 'center',\r\n        });\r\n    }\r\n    initializeComponents({ closeOnTap = true }) {\r\n        const { width, height } = this.scene.scale.gameSize;\r\n        this.dimmedBackground = this.scene.add.rectangle(0, 0, width, height, 0x000000)\r\n            .setAlpha(0.5)\r\n            .setVisible(false)\r\n            .setInteractive()\r\n            .on('pointerdown', () => {\r\n            if (closeOnTap) {\r\n                this.close();\r\n            }\r\n        });\r\n        this.addLocal(this.dimmedBackground);\r\n    }\r\n    open() {\r\n        if (!this.dimmedBackground) {\r\n            return;\r\n        }\r\n        this.dimmedBackground.setVisible(true);\r\n    }\r\n    close() {\r\n        if (!this.dimmedBackground) {\r\n            return;\r\n        }\r\n        this.dimmedBackground.setVisible(false);\r\n    }\r\n}\r\n","import SizerPopup from 'src/components/popup/sizerPopup';\r\nimport TextComponent from 'src/components/text';\r\nexport default class CreditsPopup extends SizerPopup {\r\n    constructor(scene) {\r\n        super(scene, { transition: true });\r\n    }\r\n    createContent() {\r\n        this.texts = [];\r\n        const background = this.rexUI.add.roundRectangle(0, 0, 0, 0, 50, 0xffffff)\r\n            .setStrokeStyle(10, 0xbd2018);\r\n        const content1 = this.createCreditContent('PopupScene_Credits_Title1', 'PopupScene_Credits_Content1');\r\n        const content2 = this.createCreditContent('PopupScene_Credits_Title2', 'PopupScene_Credits_Content2');\r\n        const sizer = this.rexUI.add.sizer({\r\n            orientation: 'vertical',\r\n            space: {\r\n                top: 50,\r\n                left: 50,\r\n                right: 50,\r\n                bottom: 50,\r\n                item: 40,\r\n            },\r\n        })\r\n            .addBackground(background)\r\n            .add(content1)\r\n            .add(content2);\r\n        return sizer;\r\n    }\r\n    createCreditContent(titleKey, contentKey) {\r\n        const title = new TextComponent(this.scene, {\r\n            key: titleKey,\r\n            style: {\r\n                fontSize: '60px',\r\n                color: '#660000',\r\n                align: 'center',\r\n            },\r\n        });\r\n        const content = new TextComponent(this.scene, {\r\n            key: contentKey,\r\n            style: {\r\n                fontSize: '40px',\r\n                color: '#000000',\r\n                align: 'center',\r\n            },\r\n        });\r\n        const sizer = this.rexUI.add.sizer({\r\n            orientation: 'vertical',\r\n            space: {\r\n                item: 10,\r\n            },\r\n        })\r\n            .add(title)\r\n            .add(content);\r\n        this.texts.push(title);\r\n        this.texts.push(content);\r\n        return sizer;\r\n    }\r\n    open() {\r\n        this.texts.forEach((text) => {\r\n            text.updateText();\r\n        });\r\n        super.open();\r\n    }\r\n}\r\n","import SizerPopup from 'src/components/popup/sizerPopup';\r\nimport TextComponent from 'src/components/text';\r\nimport { Frame, Texture } from 'src/types/image';\r\nexport default class DescriptionPopup extends SizerPopup {\r\n    constructor(scene) {\r\n        super(scene, { transition: true });\r\n    }\r\n    createContent() {\r\n        this.texts = [];\r\n        const background = this.rexUI.add.roundRectangle(0, 0, 0, 0, 50, 0xffffff)\r\n            .setStrokeStyle(10, 0xbd2018);\r\n        const description1 = this.createDescriptionItem('PopupScene_Description_Content1', Frame.Description1);\r\n        const description2 = this.createDescriptionItem('PopupScene_Description_Content2', Frame.Description2);\r\n        const sizer = this.rexUI.add.sizer({\r\n            orientation: 'vertical',\r\n            space: {\r\n                top: 50,\r\n                left: 50,\r\n                right: 50,\r\n                bottom: 50,\r\n                item: 40,\r\n            },\r\n        })\r\n            .addBackground(background)\r\n            .add(description1)\r\n            .add(description2)\r\n            .layout();\r\n        return sizer;\r\n    }\r\n    createDescriptionItem(key, frame) {\r\n        const text = new TextComponent(this.scene, {\r\n            key,\r\n            style: {\r\n                fontSize: '40px',\r\n                color: '#000000',\r\n            },\r\n        });\r\n        const image = this.scene.add.image(0, 0, Texture.Object, frame);\r\n        const tapFinger = this.scene.add.image(0, 0, Texture.Object, Frame.Finger);\r\n        const imageSizer = this.rexUI.add.overlapSizer()\r\n            .add(image, {\r\n            align: 'center',\r\n            expand: false,\r\n        })\r\n            .add(tapFinger, {\r\n            align: 'center',\r\n            offsetX: -image.width / 2,\r\n            offsetY: image.height / 4,\r\n            expand: false,\r\n        });\r\n        const sizer = this.rexUI.add.sizer({\r\n            orientation: 'vertical',\r\n            space: {\r\n                item: 10,\r\n            },\r\n        })\r\n            .add(text)\r\n            .add(imageSizer);\r\n        this.texts.push(text);\r\n        return sizer;\r\n    }\r\n    open() {\r\n        this.texts.forEach((text) => {\r\n            text.updateText();\r\n        });\r\n        super.open();\r\n    }\r\n}\r\n","import MuteButton from 'src/components/buttons/muteButton';\r\nimport CreditsPopup from 'src/components/popup/creditsPopup';\r\nimport DescriptionPopup from 'src/components/popup/descriptionPopup';\r\nimport BaseScene from 'src/scenes/base';\r\nconst SCENE_KEY = 'PopupScene';\r\nexport default class PopupScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: SCENE_KEY,\r\n        });\r\n        PopupScene.instance = this;\r\n    }\r\n    create() {\r\n        this.muteButton = new MuteButton(this, {\r\n            muteColor: 0xaaaaaa, tintColor: 0x444444,\r\n        });\r\n        this.descriptionPopup = new DescriptionPopup(this);\r\n        this.creditsPopup = new CreditsPopup(this);\r\n        this.rexUI.add.anchor(this.muteButton, {\r\n            right: '100%-100',\r\n            top: '0%+100',\r\n        });\r\n    }\r\n    setMuteButtonVisible(toggle) {\r\n        this.muteButton.setVisible(toggle);\r\n    }\r\n    openDescriptionPopup() {\r\n        this.descriptionPopup.open();\r\n    }\r\n    openCreditsPopup() {\r\n        this.creditsPopup.open();\r\n    }\r\n}\r\n","import GameSettings from 'src/assets/settings';\r\nimport Background from 'src/components/game/background';\r\nimport Bamiko from 'src/components/game/bamiko';\r\nimport Difficulty from 'src/components/game/difficulty';\r\nimport MusicPlayer from 'src/components/game/musicPlayer';\r\nimport ObstacleGenerator from 'src/components/game/obstacleGenerator';\r\nimport Yuri from 'src/components/game/yuri';\r\nimport BaseScene from 'src/scenes/base';\r\nimport GameUIScene from 'src/scenes/gameUI';\r\nimport PopupScene from 'src/scenes/popup';\r\nimport { GameMode } from 'src/types/mode';\r\nimport { SFX } from 'src/types/sound';\r\nexport default class GameScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: 'GameScene',\r\n        });\r\n        this.isExtremeMode = false;\r\n    }\r\n    init() {\r\n        this.cameras.main.setBackgroundColor(0xbbeeee);\r\n        GameUIScene.instance.toggle(true);\r\n        PopupScene.instance.setMuteButtonVisible(false);\r\n    }\r\n    create() {\r\n        const isExtremeMode = this.registry.get('mode') === GameMode.Extreme;\r\n        const background = new Background(this);\r\n        const difficulty = new Difficulty(this);\r\n        const bamiko = new Bamiko(this, difficulty);\r\n        const yuri = new Yuri(this, bamiko, difficulty);\r\n        const obstacleGenerator = new ObstacleGenerator(this, {\r\n            bamiko, difficulty,\r\n        });\r\n        const musicPlayer = new MusicPlayer(this);\r\n        this.background = background;\r\n        this.difficulty = difficulty;\r\n        this.bamiko = bamiko;\r\n        this.yuri = yuri;\r\n        this.obstacleGenerator = obstacleGenerator;\r\n        this.musicPlayer = musicPlayer;\r\n        this.targetOffsetX = GameSettings.camera.offsetX;\r\n        this.cameras.main.roundPixels = true;\r\n        this.bamiko.on('damaged', this.handleDamage, this);\r\n        this.bamiko.on('recover', this.handleRecover, this);\r\n        this.bamiko.on('splatdeath', this.handleSplatDeath, this);\r\n        this.bamiko.on('damagedeath', this.handleDamageDeath, this);\r\n        this.bamiko.on('falldeath', this.handleFallDeath, this);\r\n        this.events.once('shutdown', () => {\r\n            this.bamiko.off('damaged', this.handleDamage);\r\n            this.bamiko.off('recover', this.handleRecover, this);\r\n            this.bamiko.off('splatdeath', this.handleSplatDeath, this);\r\n            this.bamiko.off('damagedeath', this.handleDamageDeath);\r\n            this.bamiko.off('falldeath', this.handleFallDeath);\r\n        });\r\n        this.isExtremeMode = isExtremeMode;\r\n        if (isExtremeMode) {\r\n            this.time.delayedCall(500, () => {\r\n                this.yuri.toggleFollow(true);\r\n                this.musicPlayer.switchToYuriTheme();\r\n                this.cameraTween = this.tweens.add({\r\n                    targets: this,\r\n                    targetOffsetX: GameSettings.camera.damagedOffsetX,\r\n                    duration: 500,\r\n                    ease: 'Sine.easeInOut',\r\n                });\r\n            });\r\n        }\r\n    }\r\n    handleDamage() {\r\n        var _a;\r\n        this.yuri.toggleFollow(true);\r\n        this.musicPlayer.switchToYuriTheme();\r\n        this.cameras.main.shake(250, 0.01, true);\r\n        this.sound.play(SFX.Warning, { delay: 0.25 });\r\n        (_a = this.cameraTween) === null || _a === void 0 ? void 0 : _a.stop();\r\n        this.cameraTween = this.tweens.add({\r\n            targets: this,\r\n            targetOffsetX: GameSettings.camera.damagedOffsetX,\r\n            duration: 500,\r\n            ease: 'Sine.easeInOut',\r\n        });\r\n    }\r\n    handleRecover() {\r\n        var _a;\r\n        this.musicPlayer.switchToBamibaltTheme();\r\n        (_a = this.cameraTween) === null || _a === void 0 ? void 0 : _a.stop();\r\n        this.cameraTween = this.tweens.add({\r\n            targets: this,\r\n            targetOffsetX: GameSettings.camera.offsetX,\r\n            duration: 500,\r\n            ease: 'Sine.easeInOut',\r\n            onComplete: () => {\r\n                this.yuri.toggleFollow(false);\r\n            },\r\n        });\r\n    }\r\n    handleSplatDeath() {\r\n        this.cameras.main.shake(250, 0.01, true);\r\n        this.musicPlayer.stop();\r\n        if (this.bamiko.isDamaged || this.isExtremeMode) {\r\n            this.catchDeath();\r\n            return;\r\n        }\r\n        const timeline = this.tweens.createTimeline()\r\n            .add({\r\n            targets: this.bamiko,\r\n            y: '+=500',\r\n            duration: 1000,\r\n            ease: 'Quad.easeIn',\r\n            onComplete: () => {\r\n                this.gameOver();\r\n            },\r\n        });\r\n        timeline.play();\r\n    }\r\n    handleDamageDeath() {\r\n        this.cameras.main.shake(250, 0.01, true);\r\n        this.musicPlayer.stop();\r\n        this.catchDeath();\r\n    }\r\n    handleFallDeath() {\r\n        this.musicPlayer.stop();\r\n        if (this.bamiko.isDamaged || this.isExtremeMode) {\r\n            this.catchDeath();\r\n            return;\r\n        }\r\n        const timeline = this.tweens.createTimeline()\r\n            .add({\r\n            targets: this.bamiko,\r\n            y: '+=200',\r\n            duration: 500,\r\n            onComplete: () => {\r\n                this.cameras.main.shake(250, 0.01, true);\r\n                this.sound.play(SFX.Collision);\r\n            },\r\n        })\r\n            .add({\r\n            targets: this.bamiko,\r\n            y: '+=200',\r\n            duration: 500,\r\n            onComplete: () => {\r\n                this.gameOver();\r\n            },\r\n        });\r\n        timeline.play();\r\n    }\r\n    catchDeath() {\r\n        const { followDistance } = GameSettings.yuri;\r\n        const { maxSpeed } = this.difficulty.getDifficultySettings();\r\n        const catchUpDuration = (followDistance / maxSpeed) * 1000;\r\n        this.yuri.toggleFollow(false);\r\n        const timeline = this.tweens.createTimeline()\r\n            .add({\r\n            targets: this.yuri,\r\n            x: this.bamiko.x,\r\n            y: this.bamiko.y,\r\n            duration: catchUpDuration,\r\n        })\r\n            .add({\r\n            targets: [this.bamiko, this.yuri],\r\n            y: '-=200',\r\n            duration: 500,\r\n            ease: 'Quad.easeOut',\r\n        })\r\n            .add({\r\n            targets: [this.bamiko, this.yuri],\r\n            y: '+=200',\r\n            duration: 500,\r\n            ease: 'Quad.easeIn',\r\n            onComplete: () => {\r\n                this.gameOver();\r\n            },\r\n        })\r\n            .add({\r\n            targets: [this.bamiko, this.yuri],\r\n            x: `+=${maxSpeed}`,\r\n            angle: Phaser.Math.Between(1, 10) * 90,\r\n            duration: 1000,\r\n            offset: catchUpDuration,\r\n            onStart: () => {\r\n                this.sound.play(SFX.Collision, { detune: 500 });\r\n            },\r\n        });\r\n        timeline.play();\r\n    }\r\n    gameOver() {\r\n        GameUIScene.instance.toggle(false);\r\n        PopupScene.instance.setMuteButtonVisible(true);\r\n        this.scene.start('ResultScene', { record: this.currentScore });\r\n    }\r\n    update() {\r\n        const currentScore = Math.round(this.bamiko.body.position.x / 100);\r\n        this.updateCamera();\r\n        GameUIScene.instance.updateScore(currentScore);\r\n        this.currentScore = currentScore;\r\n    }\r\n    updateCamera() {\r\n        const camera = this.cameras.main;\r\n        const x = this.bamiko.body.position.x - this.targetOffsetX;\r\n        const y = Math.min(this.bamiko.body.position.y - GameSettings.camera.offsetY, 0);\r\n        camera.setScroll(x, y);\r\n    }\r\n}\r\n","import TextData from 'src/assets/text.json';\r\nimport BaseScene from 'src/scenes/base';\r\nimport { GameMode } from 'src/types/mode';\r\nexport default class BootScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: 'BootScene',\r\n        });\r\n    }\r\n    preload() {\r\n        const testString = [...new Set(Object.values(TextData)\r\n                .map((data) => data.text)\r\n                .join('')),\r\n        ]\r\n            .splice(0, 300)\r\n            .join('');\r\n        // @ts-ignore\r\n        this.load.rexWebFont({\r\n            google: {\r\n                families: ['Black Han Sans'],\r\n            },\r\n            testString,\r\n        });\r\n    }\r\n    create() {\r\n        this.registry.set('mode', GameMode.Classic);\r\n        this.scene.start('LoadingScene');\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"images/title_screen.png\";","export default __webpack_public_path__ + \"images/gameover_screen.png\";","export default __webpack_public_path__ + \"images/bamiko.png\";","export default __webpack_public_path__ + \"images/yuri.png\";","export default __webpack_public_path__ + \"images/estelle.png\";","export default __webpack_public_path__ + \"images/object.png\";","export default __webpack_public_path__ + \"images/ground.png\";","export default __webpack_public_path__ + \"images/building_top.png\";","export default __webpack_public_path__ + \"images/building_inside.png\";","export default __webpack_public_path__ + \"images/building_bottom.png\";","export default __webpack_public_path__ + \"images/sky.png\";","export default __webpack_public_path__ + \"images/bg_building_front.png\";","export default __webpack_public_path__ + \"images/bg_building_back.png\";","export default __webpack_public_path__ + \"sounds/Title_Theme.mp3\";","export default __webpack_public_path__ + \"sounds/Bamibalt_Theme.mp3\";","export default __webpack_public_path__ + \"sounds/Yuri_Mini_Theme.mp3\";","export default __webpack_public_path__ + \"sounds/Estelle_Mini_Theme.mp3\";","export default __webpack_public_path__ + \"sounds/GameOver_Theme.mp3\";","export default __webpack_public_path__ + \"sounds/hit.mp3\";","export default __webpack_public_path__ + \"sounds/jump.mp3\";","export default __webpack_public_path__ + \"sounds/land.mp3\";","export default __webpack_public_path__ + \"sounds/splat.mp3\";","export default __webpack_public_path__ + \"sounds/window_break.mp3\";","export default __webpack_public_path__ + \"sounds/plane.mp3\";","export default __webpack_public_path__ + \"sounds/fall.mp3\";","export default __webpack_public_path__ + \"sounds/warning.mp3\";","export default __webpack_public_path__ + \"sounds/click.mp3\";","export default __webpack_public_path__ + \"sounds/select.mp3\";","export default __webpack_public_path__ + \"sounds/runaway.mp3\";","export default function multiplyTintColor(color, tintColor) {\r\n    const colorStruct = Phaser.Display.Color.IntegerToColor(color);\r\n    const tintColorStruct = Phaser.Display.Color.IntegerToColor(tintColor);\r\n    colorStruct.redGL *= tintColorStruct.redGL;\r\n    colorStruct.greenGL *= tintColorStruct.greenGL;\r\n    colorStruct.blueGL *= tintColorStruct.blueGL;\r\n    return colorStruct.color;\r\n}\r\n","import BaseButton from 'src/components/buttons/baseButton';\r\nimport TextComponent from 'src/components/text';\r\nimport multiplyTintColor from 'src/util/color';\r\nexport default class RoundRectangleButton extends BaseButton {\r\n    createUI({ width, height, key, style, radius = 0, color = 0xffffff, tintColor = 0xaaaaaa, strokeColor = 0xbd2018, strokeThickness = 0, }) {\r\n        const roundRectangle = this.rexUI.add.roundRectangle(0, 0, width, height, radius, color)\r\n            .setStrokeStyle(strokeThickness, strokeColor);\r\n        const text = new TextComponent(this.scene, { key, style })\r\n            .setOrigin(0.5, 0.5);\r\n        this.roundRectangle = roundRectangle;\r\n        this.text = text;\r\n        this.color = color;\r\n        this.strokeColor = strokeColor;\r\n        this.tintColor = tintColor;\r\n        this\r\n            .add(roundRectangle)\r\n            .add(text, {\r\n            expand: false,\r\n        })\r\n            .layout();\r\n        return roundRectangle;\r\n    }\r\n    onButtonDown() {\r\n        this.roundRectangle.fillColor = multiplyTintColor(this.roundRectangle.fillColor, this.tintColor);\r\n        this.roundRectangle.strokeColor = multiplyTintColor(this.roundRectangle.strokeColor, this.tintColor);\r\n        this.text.setTint(this.tintColor);\r\n    }\r\n    onButtonUp() {\r\n        this.onReset();\r\n    }\r\n    onReset() {\r\n        this.roundRectangle.fillColor = this.color;\r\n        this.roundRectangle.strokeColor = this.strokeColor;\r\n        this.text.setTint(0xffffff);\r\n    }\r\n}\r\n","import RoundRectangleButton from 'src/components/buttons/roundRectangleButton';\r\nexport default class PlayButton extends RoundRectangleButton {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            width: 280,\r\n            height: 110,\r\n            radius: 55,\r\n            key: 'LoadingScene_PlayButton',\r\n            style: {\r\n                fontSize: '55px',\r\n                color: '#ffffff',\r\n                stroke: '#660000',\r\n                strokeThickness: 11,\r\n            },\r\n            color: 0xbd2018,\r\n            strokeColor: 0xffffff,\r\n            strokeThickness: 7,\r\n        });\r\n    }\r\n    onButtonUp() {\r\n        super.onButtonUp();\r\n        this.scene.input.manager.enabled = false;\r\n        this.scene.cameras.main.fadeOut(400, 0, 0, 0);\r\n        this.scene.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE, () => {\r\n            this.scene.input.manager.enabled = true;\r\n            this.scene.scene.start('IntroScene');\r\n        });\r\n    }\r\n}\r\n","import RoundRectangleButton from 'src/components/buttons/roundRectangleButton';\r\nexport default class ReloadButton extends RoundRectangleButton {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            width: 280,\r\n            height: 110,\r\n            radius: 55,\r\n            key: 'LoadingScene_ReloadButton',\r\n            style: {\r\n                fontSize: '55px',\r\n                color: '#ffffff',\r\n                stroke: '#660000',\r\n                strokeThickness: 11,\r\n            },\r\n            color: 0xbd2018,\r\n            strokeColor: 0xffffff,\r\n            strokeThickness: 7,\r\n        });\r\n    }\r\n    onButtonUp() {\r\n        super.onButtonUp();\r\n        this.scene.input.manager.enabled = false;\r\n        window.location.reload();\r\n    }\r\n}\r\n","import TitleScreenImage from 'src/assets/images/title_screen.png';\r\nimport GameOverScreenImage from 'src/assets/images/gameover_screen.png';\r\nimport BamikoSpriteSheet from 'src/assets/images/bamiko.png';\r\nimport BamikoSpriteAtlas from 'src/assets/images/bamiko.json';\r\nimport YuriSpriteSheet from 'src/assets/images/yuri.png';\r\nimport YuriSpriteAtlas from 'src/assets/images/yuri.json';\r\nimport EstelleSpriteSheet from 'src/assets/images/estelle.png';\r\nimport EstelleSpriteAtlas from 'src/assets/images/estelle.json';\r\nimport ObjectSpriteSheet from 'src/assets/images/object.png';\r\nimport ObjectSpriteAtlas from 'src/assets/images/object.json';\r\nimport GroundImage from 'src/assets/images/ground.png';\r\nimport BuildingTopImage from 'src/assets/images/building_top.png';\r\nimport BuildingInsideImage from 'src/assets/images/building_inside.png';\r\nimport BuildingBottomImage from 'src/assets/images/building_bottom.png';\r\nimport SkyImage from 'src/assets/images/sky.png';\r\nimport BGBuildingFrontImage from 'src/assets/images/bg_building_front.png';\r\nimport BGBuildingBackImage from 'src/assets/images/bg_building_back.png';\r\nimport TitleMusic from 'src/assets/sounds/Title_Theme.mp3';\r\nimport BamibaltMusic from 'src/assets/sounds/Bamibalt_Theme.mp3';\r\nimport YuriMusic from 'src/assets/sounds/Yuri_Mini_Theme.mp3';\r\nimport EstelleMusic from 'src/assets/sounds/Estelle_Mini_Theme.mp3';\r\nimport GameOverMusic from 'src/assets/sounds/GameOver_Theme.mp3';\r\nimport HitSound from 'src/assets/sounds/hit.mp3';\r\nimport JumpSound from 'src/assets/sounds/jump.mp3';\r\nimport LandSound from 'src/assets/sounds/land.mp3';\r\nimport SplatSound from 'src/assets/sounds/splat.mp3';\r\nimport WindowBreakSound from 'src/assets/sounds/window_break.mp3';\r\nimport PlaneSound from 'src/assets/sounds/plane.mp3';\r\nimport FallSound from 'src/assets/sounds/fall.mp3';\r\nimport WarningSound from 'src/assets/sounds/warning.mp3';\r\nimport ButtonClickSound from 'src/assets/sounds/click.mp3';\r\nimport SelectSound from 'src/assets/sounds/select.mp3';\r\nimport RunAwaySound from 'src/assets/sounds/runaway.mp3';\r\nimport PlayButton from 'src/components/buttons/playButton';\r\nimport BaseScene from 'src/scenes/base';\r\nimport GameUIScene from 'src/scenes/gameUI';\r\nimport PopupScene from 'src/scenes/popup';\r\nimport { Texture } from 'src/types/image';\r\nimport { Music, SFX } from 'src/types/sound';\r\nimport TextComponent from 'src/components/text';\r\nimport ReloadButton from 'src/components/buttons/ReloadButton';\r\nexport default class LoadingScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: 'LoadingScene',\r\n        });\r\n        this.isLoadingFailed = false;\r\n    }\r\n    preload() {\r\n        const loadingText = new TextComponent(this, {\r\n            key: 'LoadingScene_Loading',\r\n            parameters: { 0: 0 },\r\n            style: {\r\n                fontSize: '50px',\r\n                color: '#ffffff',\r\n            },\r\n        }).setOrigin(0.5, 0.5);\r\n        const anchor = this.rexUI.add.anchor(loadingText, {\r\n            x: 'center',\r\n            y: '100%-200',\r\n        });\r\n        this.loadingText = loadingText;\r\n        this.loadAssets();\r\n        this.load.on('progress', (value) => {\r\n            loadingText.setParameters({ 0: Math.round(value * 100) });\r\n            anchor.anchor();\r\n        });\r\n        this.load.once('loaderror', () => {\r\n            this.isLoadingFailed = true;\r\n        });\r\n    }\r\n    loadAssets() {\r\n        this.load.image(Texture.TitleScreen, TitleScreenImage);\r\n        this.load.image(Texture.GameOverScreen, GameOverScreenImage);\r\n        this.load.atlas(Texture.Bamiko, BamikoSpriteSheet, BamikoSpriteAtlas);\r\n        this.load.atlas(Texture.Yuri, YuriSpriteSheet, YuriSpriteAtlas);\r\n        this.load.atlas(Texture.Estelle, EstelleSpriteSheet, EstelleSpriteAtlas);\r\n        this.load.atlas(Texture.Object, ObjectSpriteSheet, ObjectSpriteAtlas);\r\n        this.load.image(Texture.Ground, GroundImage);\r\n        this.load.image(Texture.BuildingTop, BuildingTopImage);\r\n        this.load.image(Texture.BuildingInside, BuildingInsideImage);\r\n        this.load.image(Texture.BuildingBottom, BuildingBottomImage);\r\n        this.load.image(Texture.Sky, SkyImage);\r\n        this.load.image(Texture.BGBuildingFront, BGBuildingFrontImage);\r\n        this.load.image(Texture.BGBuildingBack, BGBuildingBackImage);\r\n        this.load.audio(Music.Title, TitleMusic);\r\n        this.load.audio(Music.Bamibalt, BamibaltMusic);\r\n        this.load.audio(Music.Yuri, YuriMusic);\r\n        this.load.audio(Music.Estelle, EstelleMusic);\r\n        this.load.audio(Music.GameOver, GameOverMusic);\r\n        this.load.audio(SFX.Collision, HitSound);\r\n        this.load.audio(SFX.Jump, JumpSound);\r\n        this.load.audio(SFX.Land, LandSound);\r\n        this.load.audio(SFX.Splat, SplatSound);\r\n        this.load.audio(SFX.WindowCrash, WindowBreakSound);\r\n        this.load.audio(SFX.Plane, PlaneSound);\r\n        this.load.audio(SFX.Fall, FallSound);\r\n        this.load.audio(SFX.Warning, WarningSound);\r\n        this.load.audio(SFX.ButtonClick, ButtonClickSound);\r\n        this.load.audio(SFX.Select, SelectSound);\r\n        this.load.audio(SFX.RunAway, RunAwaySound);\r\n    }\r\n    create() {\r\n        this.load.removeAllListeners();\r\n        if (this.isLoadingFailed) {\r\n            this.displayErrorPage();\r\n            return;\r\n        }\r\n        const playButton = new PlayButton(this);\r\n        this.rexUI.add.anchor(playButton, {\r\n            x: 'center',\r\n            y: '100%-100',\r\n        });\r\n        this.loadingText.setKey('LoadingScene_Ready');\r\n        this.scene.add('GameUIScene', GameUIScene, true);\r\n        this.scene.add('PopupScene', PopupScene, true);\r\n    }\r\n    displayErrorPage() {\r\n        const reloadButton = new ReloadButton(this);\r\n        this.rexUI.add.anchor(reloadButton, {\r\n            x: 'center',\r\n            y: '100%-100',\r\n        });\r\n        this.loadingText.setKey('LoadingScene_Load_Error');\r\n    }\r\n}\r\n","import RoundRectangleButton from 'src/components/buttons/roundRectangleButton';\r\nimport PopupScene from 'src/scenes/popup';\r\nimport { SFX } from 'src/types/sound';\r\nexport default class CreditButton extends RoundRectangleButton {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            width: 220,\r\n            height: 70,\r\n            radius: 35,\r\n            key: 'TitleScene_Credits',\r\n            style: {\r\n                fontSize: '35px',\r\n                color: '#ffffff',\r\n            },\r\n            color: 0x000000,\r\n            strokeColor: 0xffffff,\r\n            strokeThickness: 7,\r\n        });\r\n    }\r\n    onButtonUp() {\r\n        super.onButtonUp();\r\n        this.scene.sound.play(SFX.ButtonClick);\r\n        PopupScene.instance.openCreditsPopup();\r\n    }\r\n}\r\n","import RoundRectangleButton from 'src/components/buttons/roundRectangleButton';\r\nimport PopupScene from 'src/scenes/popup';\r\nimport { SFX } from 'src/types/sound';\r\nexport default class DescriptionButton extends RoundRectangleButton {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            width: 220,\r\n            height: 90,\r\n            radius: 45,\r\n            key: 'TitleScene_Description',\r\n            style: {\r\n                fontSize: '40px',\r\n                color: '#ffffff',\r\n                stroke: '#660000',\r\n                strokeThickness: 8,\r\n            },\r\n            color: 0xbd2018,\r\n            strokeColor: 0xffffff,\r\n            strokeThickness: 7,\r\n        });\r\n    }\r\n    onButtonUp() {\r\n        super.onButtonUp();\r\n        this.scene.sound.play(SFX.ButtonClick);\r\n        PopupScene.instance.openDescriptionPopup();\r\n    }\r\n}\r\n","import RoundRectangleButton from 'src/components/buttons/roundRectangleButton';\r\nimport { SFX } from 'src/types/sound';\r\nexport default class StartButton extends RoundRectangleButton {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            width: 260,\r\n            height: 110,\r\n            radius: 55,\r\n            key: 'TitleScene_Start',\r\n            style: {\r\n                fontSize: '50px',\r\n                color: '#ffffff',\r\n                stroke: '#660000',\r\n                strokeThickness: 10,\r\n            },\r\n            color: 0xbd2018,\r\n            strokeColor: 0xffffff,\r\n            strokeThickness: 7,\r\n        });\r\n    }\r\n    onButtonUp() {\r\n        super.onButtonUp();\r\n        this.scene.sound.play(SFX.RunAway);\r\n        this.scene.input.manager.enabled = false;\r\n        this.scene.cameras.main.fadeOut(400, 0, 0, 0);\r\n        this.scene.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE, () => {\r\n            this.scene.input.manager.enabled = true;\r\n            this.scene.scene.start('GameScene');\r\n        });\r\n    }\r\n}\r\n","import BaseButton from 'src/components/buttons/baseButton';\r\nimport multiplyTintColor from 'src/util/color';\r\nexport default class ArrowButton extends BaseButton {\r\n    createUI(options) {\r\n        var _a, _b, _c, _d;\r\n        const triangle = this.createTriangle(options);\r\n        triangle.setStrokeStyle(7, (_a = options.strokeColor) !== null && _a !== void 0 ? _a : 0xbd2018);\r\n        this.triangle = triangle;\r\n        this.color = (_b = options.color) !== null && _b !== void 0 ? _b : 0xffffff;\r\n        this.strokeColor = (_c = options.strokeColor) !== null && _c !== void 0 ? _c : 0xbd2018;\r\n        this.tintColor = (_d = options.tintColor) !== null && _d !== void 0 ? _d : 0xaaaaaa;\r\n        this\r\n            .add(triangle)\r\n            .layout();\r\n        return triangle;\r\n    }\r\n    createTriangle({ width, height, direction, color = 0xffffff, }) {\r\n        switch (direction) {\r\n            case 'left':\r\n                return this.scene.add.triangle(0, 0, 0, height / 2, width, height, width, 0, color);\r\n            case 'right':\r\n            default:\r\n                return this.scene.add.triangle(0, 0, 0, 0, 0, height, width, height / 2, color);\r\n        }\r\n    }\r\n    onButtonDown() {\r\n        this.triangle.fillColor = multiplyTintColor(this.triangle.fillColor, this.tintColor);\r\n        this.triangle.strokeColor = multiplyTintColor(this.triangle.strokeColor, this.tintColor);\r\n    }\r\n    onButtonUp() {\r\n        this.onReset();\r\n    }\r\n    onReset() {\r\n        this.triangle.fillColor = this.color;\r\n        this.triangle.strokeColor = this.strokeColor;\r\n    }\r\n}\r\n","import Sizer from 'phaser3-rex-plugins/templates/ui/sizer/Sizer';\r\nimport ArrowButton from 'src/components/buttons/arrowButton';\r\nimport { GameMode, getModeText } from 'src/types/mode';\r\nimport TextComponent from 'src/components/text';\r\nimport { SFX } from 'src/types/sound';\r\nexport default class ModeSelector extends Sizer {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            orientation: 'horizontal',\r\n            space: {\r\n                item: 20,\r\n            },\r\n        });\r\n        this.rexUI = scene.rexUI;\r\n        this.initializeComponents();\r\n        this.scene.add.existing(this);\r\n    }\r\n    initializeComponents() {\r\n        const leftArrowButton = new ArrowButton(this.scene, {\r\n            width: 70,\r\n            height: 80,\r\n            direction: 'left',\r\n            color: 0xbd2018,\r\n            strokeColor: 0x660000,\r\n        });\r\n        const currentModeUI = this.createCurrentModeUI();\r\n        const rightArrowButton = new ArrowButton(this.scene, {\r\n            width: 70,\r\n            height: 80,\r\n            direction: 'right',\r\n            color: 0xbd2018,\r\n            strokeColor: 0x660000,\r\n        });\r\n        leftArrowButton.on('released', this.handleLeftArrowPressed, this);\r\n        rightArrowButton.on('released', this.handleRightArrowPressed, this);\r\n        this.leftArrowButton = leftArrowButton;\r\n        this.rightArrowButton = rightArrowButton;\r\n        this\r\n            .add(leftArrowButton)\r\n            .add(currentModeUI)\r\n            .add(rightArrowButton)\r\n            .layout();\r\n    }\r\n    createCurrentModeUI() {\r\n        const background = this.rexUI.add.roundRectangle(0, 0, 280, 90, 30, 0xffffff)\r\n            .setStrokeStyle(7, 0xbd2018);\r\n        const text = new TextComponent(this.scene, {\r\n            key: getModeText(this.scene.registry.get('mode')),\r\n            style: {\r\n                fontSize: '40px',\r\n                color: '#660000',\r\n                align: 'center',\r\n            },\r\n        });\r\n        const sizer = this.rexUI.add.overlapSizer()\r\n            .add(background, {\r\n            expand: false,\r\n        })\r\n            .add(text, {\r\n            expand: false,\r\n        });\r\n        this.modeText = text;\r\n        this.scene.registry.events.on('changedata', this.handleChangeData, this);\r\n        return sizer;\r\n    }\r\n    handleLeftArrowPressed() {\r\n        const numModes = Object.keys(GameMode).length / 2;\r\n        const currentMode = this.scene.registry.get('mode');\r\n        const nextMode = (numModes + currentMode - 1) % numModes;\r\n        this.scene.registry.set('mode', nextMode);\r\n        this.scene.sound.play(SFX.ButtonClick);\r\n    }\r\n    handleRightArrowPressed() {\r\n        const numModes = Object.keys(GameMode).length / 2;\r\n        const currentMode = this.scene.registry.get('mode');\r\n        const nextMode = (numModes + currentMode + 1) % numModes;\r\n        this.scene.registry.set('mode', nextMode);\r\n        this.scene.sound.play(SFX.ButtonClick);\r\n    }\r\n    handleChangeData(_, key, value) {\r\n        if (key === 'mode') {\r\n            this.modeText.setKey(getModeText(value));\r\n            this.layout();\r\n        }\r\n    }\r\n    destroy(fromScene) {\r\n        this.leftArrowButton.off('pressed', this.handleLeftArrowPressed);\r\n        this.rightArrowButton.off('pressed', this.handleRightArrowPressed);\r\n        this.scene.registry.events.off('changedata', this.handleChangeData);\r\n        super.destroy(fromScene);\r\n    }\r\n}\r\n","import TextComponent from 'src/components/text';\r\nexport default class TitleText extends TextComponent {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            key: 'TitleScene_Title',\r\n            style: {\r\n                color: '#ffffff',\r\n                fontSize: '180px',\r\n                stroke: '#bd2018',\r\n                strokeThickness: 20,\r\n                shadow: {\r\n                    stroke: true,\r\n                    color: '#000000aa',\r\n                    blur: 10,\r\n                    offsetY: 10,\r\n                },\r\n                padding: {\r\n                    left: 10,\r\n                    right: 10,\r\n                    bottom: 10,\r\n                },\r\n            },\r\n        });\r\n        const gradient = this.context.createLinearGradient(0, this.height, 0, 0);\r\n        gradient.addColorStop(0, '#aaaaaa');\r\n        gradient.addColorStop(0.25, '#ffffff');\r\n        gradient.addColorStop(0.5, '#ffffff');\r\n        gradient.addColorStop(0.75, '#ffffff');\r\n        gradient.addColorStop(1, '#aaaaaa');\r\n        this.setFill(gradient);\r\n        this.setOrigin(0.5, 0.5);\r\n    }\r\n}\r\n","import { GameMode } from 'src/types/mode';\r\nconst LOCAL_STORAGE_KEY = 'BAMIBALT';\r\nconst DEFAULT_HIGH_SCORE_MAP = {\r\n    [GameMode.Classic]: 0,\r\n    [GameMode.Extreme]: 0,\r\n    [GameMode.Estelle]: 0,\r\n};\r\nclass APISingleton {\r\n    getHighScoreMap() {\r\n        const rawSaveData = window.localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        if (!rawSaveData) {\r\n            return DEFAULT_HIGH_SCORE_MAP;\r\n        }\r\n        const highScoreMap = JSON.parse(rawSaveData);\r\n        return Object.assign(Object.assign({}, DEFAULT_HIGH_SCORE_MAP), highScoreMap);\r\n    }\r\n    getHighScore(mode) {\r\n        var _a;\r\n        const highScoreMap = this.getHighScoreMap();\r\n        const highScore = (_a = highScoreMap[mode]) !== null && _a !== void 0 ? _a : 0;\r\n        return highScore;\r\n    }\r\n    setHighScore(score, mode) {\r\n        const highScoreMap = this.getHighScoreMap();\r\n        const highScore = highScoreMap[mode];\r\n        if (score > highScore) {\r\n            highScoreMap[mode] = score;\r\n            window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(highScoreMap));\r\n        }\r\n    }\r\n}\r\nconst API = new APISingleton();\r\nexport default API;\r\n","import CreditButton from 'src/components/buttons/creditButton';\r\nimport DescriptionButton from 'src/components/buttons/descriptionButton';\r\nimport StartButton from 'src/components/buttons/startButton';\r\nimport TextComponent from 'src/components/text';\r\nimport ModeSelector from 'src/components/ui/modeSelector';\r\nimport TitleText from 'src/components/ui/titleText';\r\nimport BaseScene from 'src/scenes/base';\r\nimport { Texture } from 'src/types/image';\r\nimport { Music, SFX } from 'src/types/sound';\r\nimport API from 'src/util/api';\r\nexport default class TitleScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: 'TitleScene',\r\n        });\r\n        this.isFirstTime = true;\r\n    }\r\n    create() {\r\n        const titleScreen = this.add.image(0, 0, Texture.TitleScreen);\r\n        const tapToStart = new TextComponent(this, {\r\n            key: 'TitleScene_Continue',\r\n            style: {\r\n                color: '#ffffff',\r\n                fontSize: '50px',\r\n                stroke: '#000000',\r\n                strokeThickness: 6,\r\n            },\r\n        }).setOrigin(0.5, 0.5);\r\n        const highScoreText = new TextComponent(this, {\r\n            key: 'TitleScene_Highscore',\r\n            parameters: { 0: API.getHighScore(this.registry.get('mode')) },\r\n            style: {\r\n                color: '#ffffff',\r\n                fontSize: '50px',\r\n                stroke: '#000000',\r\n                strokeThickness: 6,\r\n            },\r\n        });\r\n        const titleText = new TitleText(this);\r\n        const startButton = new StartButton(this);\r\n        const descriptionButton = new DescriptionButton(this);\r\n        const modeSelector = new ModeSelector(this);\r\n        const creditButton = new CreditButton(this);\r\n        const centerUISizer = this.rexUI.add.sizer({\r\n            orientation: 'vertical',\r\n            space: {\r\n                item: 30,\r\n            },\r\n        })\r\n            .add(startButton)\r\n            .add(descriptionButton)\r\n            .add(modeSelector)\r\n            .layout();\r\n        const uiSizer = this.rexUI.add.overlapSizer({\r\n            width: this.scale.gameSize.width,\r\n            height: this.scale.gameSize.height,\r\n            anchor: {\r\n                x: 'center',\r\n                y: 'center',\r\n            },\r\n        })\r\n            .add(highScoreText, {\r\n            align: 'left-top',\r\n            offsetX: 50,\r\n            offsetY: 50,\r\n            expand: false,\r\n        })\r\n            .add(creditButton, {\r\n            align: 'right-bottom',\r\n            offsetX: -50,\r\n            offsetY: -50,\r\n            expand: false,\r\n        })\r\n            .add(centerUISizer, {\r\n            align: 'center',\r\n            offsetY: 300,\r\n            expand: false,\r\n        })\r\n            .setVisible(false)\r\n            .layout();\r\n        this.tapToStart = tapToStart;\r\n        this.uiSizer = uiSizer;\r\n        this.highScoreText = highScoreText;\r\n        this.rexUI.add.anchor(titleScreen, {\r\n            x: 'center',\r\n            y: 'center',\r\n        });\r\n        this.rexUI.add.anchor(titleText, {\r\n            x: 'center',\r\n            y: '22%',\r\n        });\r\n        this.rexUI.add.anchor(tapToStart, {\r\n            x: 'center',\r\n            y: '75%',\r\n        });\r\n        this.sound.play(Music.Title, { loop: true });\r\n        if (this.isFirstTime) {\r\n            this.input.once('pointerdown', this.handleTapToStart, this);\r\n            this.tweens.add({\r\n                targets: tapToStart,\r\n                alpha: 0,\r\n                duration: 1000,\r\n                ease: 'Sine.easeIn',\r\n                yoyo: true,\r\n                repeat: -1,\r\n            });\r\n            this.isFirstTime = false;\r\n        }\r\n        else {\r\n            this.tapToStart.setVisible(false);\r\n            this.uiSizer.setVisible(true);\r\n        }\r\n        this.registry.events.on('changedata', this.handleChangeData, this);\r\n        this.events.once('shutdown', () => {\r\n            this.sound.stopByKey(Music.Title);\r\n            this.input.off('pointerdown', this.handleTapToStart);\r\n            this.registry.events.off('changedata', this.handleChangeData);\r\n        });\r\n        this.cameras.main.fadeIn(400, 0, 0, 0);\r\n        this.tweens.createTimeline()\r\n            .add({\r\n            targets: titleScreen,\r\n            scale: 1,\r\n            duration: 12000,\r\n            ease: 'Sine.easeInOut',\r\n            yoyo: true,\r\n            repeat: -1,\r\n            onStart: () => {\r\n                titleScreen.setScale(1.1);\r\n            },\r\n        })\r\n            .play();\r\n    }\r\n    handleTapToStart() {\r\n        this.tapToStart.setVisible(false);\r\n        this.uiSizer.setVisible(true);\r\n        this.sound.play(SFX.Select);\r\n    }\r\n    handleChangeData(_, key) {\r\n        if (key === 'mode') {\r\n            this.highScoreText.setParameters({ 0: API.getHighScore(this.registry.get('mode')) });\r\n        }\r\n    }\r\n}\r\n","import RoundRectangleButton from 'src/components/buttons/roundRectangleButton';\r\nimport { SFX } from 'src/types/sound';\r\nexport default class RetryButton extends RoundRectangleButton {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            width: 230,\r\n            height: 90,\r\n            radius: 45,\r\n            key: 'ResultScene_Retry_Button',\r\n            style: {\r\n                fontSize: '50px',\r\n                color: '#000000',\r\n            },\r\n        });\r\n    }\r\n    onButtonUp() {\r\n        super.onButtonUp();\r\n        this.scene.sound.play(SFX.RunAway);\r\n        this.scene.input.manager.enabled = false;\r\n        this.scene.cameras.main.fadeOut(400, 0, 0, 0);\r\n        this.scene.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE, () => {\r\n            this.scene.input.manager.enabled = true;\r\n            this.scene.scene.start('GameScene');\r\n        });\r\n    }\r\n}\r\n","import RoundRectangleButton from 'src/components/buttons/roundRectangleButton';\r\nimport { SFX } from 'src/types/sound';\r\nexport default class ToTitleButton extends RoundRectangleButton {\r\n    constructor(scene) {\r\n        super(scene, {\r\n            width: 230,\r\n            height: 90,\r\n            radius: 45,\r\n            key: 'ResultScene_Title_Button',\r\n            style: {\r\n                fontSize: '50px',\r\n                color: '#000000',\r\n            },\r\n        });\r\n    }\r\n    onButtonUp() {\r\n        super.onButtonUp();\r\n        this.scene.sound.play(SFX.ButtonClick);\r\n        this.scene.input.manager.enabled = false;\r\n        this.scene.cameras.main.fadeOut(400, 0, 0, 0);\r\n        this.scene.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE, () => {\r\n            this.scene.input.manager.enabled = true;\r\n            this.scene.scene.start('TitleScene');\r\n        });\r\n    }\r\n}\r\n","import RetryButton from 'src/components/buttons/retryButton';\r\nimport ToTitleButton from 'src/components/buttons/toTitleButton';\r\nimport TextComponent from 'src/components/text';\r\nimport BaseScene from 'src/scenes/base';\r\nimport { Texture } from 'src/types/image';\r\nimport { getModeText } from 'src/types/mode';\r\nimport { Music } from 'src/types/sound';\r\nimport API from 'src/util/api';\r\nexport default class ResultScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: 'ResultScene',\r\n        });\r\n    }\r\n    init(data) {\r\n        if (!data) {\r\n            throw new Error('No result data provided');\r\n        }\r\n        this.result = data;\r\n    }\r\n    create() {\r\n        const score = this.result.record;\r\n        const highScore = API.getHighScore(this.registry.get('mode'));\r\n        const gameOverScreen = this.add.image(0, 0, Texture.GameOverScreen);\r\n        const titleText = new TextComponent(this, {\r\n            key: score > highScore ? 'ResultScene_Title_Highscore' : 'ResultScene_Title_Normal',\r\n            style: {\r\n                fontSize: '110px',\r\n                stroke: '#000000',\r\n                strokeThickness: 10,\r\n            },\r\n        });\r\n        const modeText = new TextComponent(this, {\r\n            key: getModeText(this.registry.get('mode')),\r\n            style: {\r\n                fontSize: '90px',\r\n                stroke: '#000000',\r\n                strokeThickness: 9,\r\n            },\r\n        });\r\n        const contentText = new TextComponent(this, {\r\n            key: 'ResultScene_Score',\r\n            parameters: { 0: score },\r\n            style: {\r\n                fontSize: '80px',\r\n                stroke: '#000000',\r\n                strokeThickness: 8,\r\n            },\r\n        });\r\n        const retryButton = new RetryButton(this);\r\n        const toTitleButton = new ToTitleButton(this);\r\n        this.cameras.main.fadeIn(1000, 0, 0, 0);\r\n        this.sound.play(Music.GameOver, { loop: true });\r\n        API.setHighScore(score, this.registry.get('mode'));\r\n        this.rexUI.add.anchor(gameOverScreen, {\r\n            x: 'center',\r\n            y: 'center',\r\n        });\r\n        this.rexUI.add.sizer({\r\n            orientation: 'vertical',\r\n            anchor: {\r\n                left: '0%+50',\r\n                top: '0%+80',\r\n            },\r\n            space: {\r\n                item: 10,\r\n            },\r\n        })\r\n            .add(titleText, {\r\n            align: 'left',\r\n        })\r\n            .add(modeText, {\r\n            align: 'left',\r\n            padding: {\r\n                left: 40,\r\n            },\r\n        })\r\n            .add(contentText, {\r\n            align: 'left',\r\n            padding: {\r\n                left: 80,\r\n            },\r\n        })\r\n            .layout();\r\n        this.rexUI.add.sizer({\r\n            orientation: 'horizontal',\r\n            anchor: {\r\n                right: '100%-50',\r\n                y: '100%-80',\r\n            },\r\n            space: {\r\n                item: 30,\r\n            },\r\n        })\r\n            .add(retryButton)\r\n            .add(toTitleButton)\r\n            .layout();\r\n        this.events.once('shutdown', () => {\r\n            this.sound.stopByKey(Music.GameOver);\r\n        });\r\n    }\r\n}\r\n","import TextComponent from 'src/components/text';\r\nimport BaseScene from 'src/scenes/base';\r\nconst TEXT_LIST = [\r\n    {\r\n        key: 'IntroScene_Content1',\r\n        style: {\r\n            fontSize: '40px',\r\n            color: '#ffffff',\r\n            align: 'center',\r\n        },\r\n        duration: 3000,\r\n    },\r\n    {\r\n        key: 'IntroScene_Content2',\r\n        style: {\r\n            fontSize: '40px',\r\n            color: '#ffffff',\r\n            align: 'center',\r\n        },\r\n        duration: 1000,\r\n    },\r\n];\r\nexport default class IntroScene extends BaseScene {\r\n    constructor() {\r\n        super({\r\n            key: 'IntroScene',\r\n        });\r\n        this.texts = [];\r\n        this.currentIndex = 0;\r\n    }\r\n    create() {\r\n        TEXT_LIST.forEach((textInfo) => {\r\n            const textItem = this.createTextItem(textInfo);\r\n            this.texts.push(textItem);\r\n        });\r\n        if (this.texts.length > 0) {\r\n            this.texts[0].timeline.play();\r\n        }\r\n        this.input.on('pointerdown', this.handleSkipText, this);\r\n        this.events.once('shutdown', () => {\r\n            this.input.off('pointerdown', this.handleSkipText);\r\n        });\r\n    }\r\n    createTextItem({ key, style, duration }) {\r\n        const text = new TextComponent(this, { key, style })\r\n            .setOrigin(0.5, 0.5)\r\n            .setAlpha(0);\r\n        const timeline = this.tweens.createTimeline()\r\n            .add({\r\n            targets: text,\r\n            alpha: 1,\r\n            duration: 1000,\r\n        })\r\n            .add({\r\n            targets: text,\r\n            alpha: 1,\r\n            duration,\r\n        })\r\n            .add({\r\n            targets: text,\r\n            alpha: 0,\r\n            duration: 1000,\r\n        })\r\n            .add({\r\n            targets: text,\r\n            alpha: 0,\r\n            duration: 1000,\r\n            onComplete: () => {\r\n                this.next();\r\n            },\r\n        });\r\n        this.rexUI.add.anchor(text, {\r\n            x: 'center',\r\n            y: 'center',\r\n        });\r\n        return { text, timeline };\r\n    }\r\n    next() {\r\n        this.currentIndex++;\r\n        if (this.currentIndex > this.texts.length - 1) {\r\n            this.scene.start('TitleScene');\r\n            return;\r\n        }\r\n        const { timeline } = this.texts[this.currentIndex];\r\n        timeline.play();\r\n    }\r\n    handleSkipText() {\r\n        const textInfo = this.texts[this.currentIndex];\r\n        if (!textInfo) {\r\n            return;\r\n        }\r\n        textInfo.timeline.stop();\r\n        textInfo.text.setAlpha(0);\r\n        this.next();\r\n    }\r\n}\r\n","import 'src/main.scss';\r\nimport 'src/assets/images/og_image.jpg';\r\nimport Phaser from 'phaser';\r\nimport RexUIPlugin from 'phaser3-rex-plugins/templates/ui/ui-plugin';\r\nimport WebFontLoaderPlugin from 'phaser3-rex-plugins/plugins/webfontloader-plugin';\r\nimport GameScene from 'src/scenes/game';\r\nimport BootScene from 'src/scenes/boot';\r\nimport LoadingScene from 'src/scenes/loading';\r\nimport TitleScene from 'src/scenes/title';\r\nimport ResultScene from 'src/scenes/result';\r\nimport IntroScene from 'src/scenes/intro';\r\nfunction launchGame() {\r\n    const config = {\r\n        width: 1920,\r\n        height: 1080,\r\n        scale: {\r\n            mode: Phaser.Scale.ScaleModes.FIT,\r\n            autoCenter: Phaser.Scale.CENTER_BOTH,\r\n        },\r\n        physics: {\r\n            default: 'arcade',\r\n            arcade: {\r\n                gravity: { y: 3000 },\r\n            },\r\n        },\r\n        scene: [BootScene, LoadingScene, IntroScene, TitleScene, GameScene, ResultScene],\r\n        title: 'BAMIBALT',\r\n        url: 'https://github.com/andrewpk95/Bamibalt',\r\n        plugins: {\r\n            global: [\r\n                {\r\n                    key: 'rexWebFontLoader',\r\n                    plugin: WebFontLoaderPlugin,\r\n                    start: true,\r\n                },\r\n            ],\r\n            scene: [\r\n                {\r\n                    key: 'rexUI',\r\n                    plugin: RexUIPlugin,\r\n                    mapping: 'rexUI',\r\n                },\r\n            ],\r\n        },\r\n    };\r\n    return new Phaser.Game(config);\r\n}\r\nwindow.addEventListener('load', () => {\r\n    launchGame();\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbamibalt\"] = self[\"webpackChunkbamibalt\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], function() { return __webpack_require__(6595); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","GameMode","MODE_MAP","Classic","text","Extreme","Estelle","getModeText","mode","modeInfo","Texture","Frame","camera","offsetX","damagedOffsetX","offsetY","bamiko","jumpVelocity","maxJumpDuration","doubleJumpVelocity","maxDoubleJumpDuration","yuri","followDistance","obstacle","building","height","difficulty","levels","level","gap","minSpeed","maxSpeed","acceleration","recoverTime","toNextLevelTime","Music","SFX","ZIndex","BACKGROUND_LIST","scrollX","scrollY","texture","Sky","BGBuildingBack","BGBuildingFront","Background","scene","backgrounds","initializeComponents","add","existing","events","on","update","forEach","background","frame","tileSprite","createTileSprite","push","Object","assign","this","scale","width","tileHeight","textures","getFrame","setOrigin","setScrollFactor","i","length","tilePositionX","cameras","main","fromScene","off","Phaser","JumpState","RUN_ANIMATION_KEY","JUMP_ANIMATION_KEY","OUCH_FRAME","Bamiko","jumpState","None","currentJumpTime","isDamaged","isDead","currentRecoverTime","hasDoubleJump","wasGrounded","physics","setDepth","body","setSize","setOffset","velocity","x","getDifficultySettings","anims","create","key","frames","generateFrameNames","prefix","end","zeroPad","frameRate","repeat","input","jump","stopJumping","play","isExtremeMode","registry","get","blocked","down","isGrounded","Jumping","sound","Jump","y","GameSettings","DoubleJumping","detune","damageTween","_a","Collision","die","setFrame","emit","stop","tweens","targets","duration","yoyo","onStart","setTintFill","onRepeat","onYoyo","clearTint","onComplete","Splat","setX","world","remove","time","delta","deltaTime","updatePhysics","updateRecoverTime","position","gameSize","Fall","Land","timeScale","jumpEndTime","Difficulty","currentTime","currentLevel","getMaxLevel","MusicPlayer","yuriTheme","pause","isEstelleMode","bamibalt","Bamibalt","loop","Yuri","volume","target","_b","bamibaltFadeTween","yuriThemeFadeTween","stopFadeTweens","resume","getFadeOutTween","getFadeInTween","Pool","T","initCount","defaultArgs","pool","kill","object","config","pop","reset","BaseObstaclePool","once","group","removeAllListeners","BaseObstacle","handleUpdate","name","initialize","active","setActive","setVisible","setPosition","BoxObstacle","setTexture","Box","particle","particles","emitter","createEmitter","quantity","angle","min","max","speed","rotate","start","gravityY","lifespan","frequency","setSpeed","emitParticleAt","BoxObstaclePool","overlap","player","box","crash","takeDamage","BaseObstacleGroup","GroundObstacle","Ground","GroundObstaclePool","staticGroup","collider","ground","touching","right","splat","BoxObstacleGroup","arguments","groundPool","boxPool","Math","Between","BuildingObstacle","buildingInside","sprite","BuildingInside","buildingTop","BuildingTop","BuildingBottom","BuildingObstaclePool","WindowObstacle","isCrashed","Window","map","WindowCrash","RND","realInRange","setEmitZone","type","source","getBounds","emitParticle","WindowObstaclePool","window","BuildingObstacleGroup","buildingPool","windowPool","GroundObstacleGroup","FLY_ANIMATION_KEY","HURT_FRAME","PlaneObstacle","isFlying","Plane","isAbove","timeline","createTimeline","ease","offset","PlaneObstaclePool","allowGravity","plane","PlaneObstacleGroup","planePool","planeOffset","PlatformObstacle","billboard","image","BillBoard","picture","getPictureFrame","setTint","Platform","checkCollision","left","PlatformObstaclePool","undefined","PlatformObstacleGroup","currentFrameIndex","platformPool","shuffle","Array","from","_","maxLevel","numPlatforms","floor","platformHeight","platformGap","ObstacleGenerator","currentObstacleX","currentObstacleY","obstacleGroups","createObstacleGroup","groundObstacleGroup","boxObstacleGroup","buildingObstacleGroup","planeObstacleGroup","platformObstacleGroup","currentMode","spawnObstacle","randomObstacleGroup","obstacleGroup","spawn","positions","fps","shift","isFollowing","nextPosition","find","follow","BaseScene","numberRegex","parameterRegex","getText","parameters","rawText","TextData","matchedParameterText","match","result","paramText","number","arg","replace","TextComponent","string","style","fontFamily","fontStyle","setText","GameUIScene","instance","scoreUI","fontSize","color","stroke","strokeThickness","anchor","rexUI","top","toggle","score","BaseButton","options","isPressed","createUI","setInteractive","handlePointerDown","handlePointerUp","onButtonDown","onButtonUp","enabled","disableInteractive","onReset","removeInteractive","OverlapSizer","MuteButton","muteColor","tintColor","VolumeButtonOn","muted","game","mute","updateButton","VolumeButtonOff","toggleMute","SizerPopup","transition","closeOnTap","sizer","createContent","layout","popUp","BasePopup","dimmedBackground","rectangle","setAlpha","close","addLocal","ContainerLite","CreditsPopup","texts","roundRectangle","setStrokeStyle","content1","createCreditContent","content2","orientation","space","bottom","item","addBackground","titleKey","contentKey","title","align","content","updateText","DescriptionPopup","description1","createDescriptionItem","Description1","description2","Description2","tapFinger","Finger","imageSizer","overlapSizer","expand","PopupScene","muteButton","descriptionPopup","creditsPopup","open","GameScene","setBackgroundColor","setMuteButtonVisible","obstacleGenerator","musicPlayer","targetOffsetX","roundPixels","handleDamage","handleRecover","handleSplatDeath","handleDamageDeath","handleFallDeath","delayedCall","toggleFollow","switchToYuriTheme","cameraTween","shake","Warning","delay","switchToBamibaltTheme","catchDeath","gameOver","catchUpDuration","record","currentScore","round","updateCamera","updateScore","setScroll","BootScene","testString","Set","values","data","join","splice","load","rexWebFont","google","families","set","multiplyTintColor","colorStruct","Display","Color","IntegerToColor","tintColorStruct","redGL","greenGL","blueGL","RoundRectangleButton","radius","strokeColor","fillColor","PlayButton","manager","fadeOut","Cameras","Scene2D","Events","FADE_OUT_COMPLETE","ReloadButton","location","reload","LoadingScene","isLoadingFailed","loadingText","loadAssets","value","setParameters","TitleScreen","TitleScreenImage","GameOverScreen","GameOverScreenImage","atlas","BamikoSpriteSheet","BamikoSpriteAtlas","YuriSpriteSheet","YuriSpriteAtlas","EstelleSpriteSheet","EstelleSpriteAtlas","ObjectSpriteSheet","ObjectSpriteAtlas","GroundImage","BuildingTopImage","BuildingInsideImage","BuildingBottomImage","SkyImage","BGBuildingFrontImage","BGBuildingBackImage","audio","Title","TitleMusic","BamibaltMusic","YuriMusic","EstelleMusic","GameOver","GameOverMusic","HitSound","JumpSound","LandSound","SplatSound","WindowBreakSound","PlaneSound","FallSound","WarningSound","ButtonClick","ButtonClickSound","Select","SelectSound","RunAway","RunAwaySound","displayErrorPage","playButton","setKey","reloadButton","CreditButton","openCreditsPopup","DescriptionButton","openDescriptionPopup","StartButton","ArrowButton","_c","_d","triangle","createTriangle","direction","ModeSelector","leftArrowButton","currentModeUI","createCurrentModeUI","rightArrowButton","handleLeftArrowPressed","handleRightArrowPressed","modeText","handleChangeData","numModes","keys","nextMode","Sizer","TitleText","gradient","shadow","blur","padding","context","createLinearGradient","addColorStop","setFill","LOCAL_STORAGE_KEY","DEFAULT_HIGH_SCORE_MAP","APISingleton","rawSaveData","localStorage","getItem","highScoreMap","JSON","parse","getHighScoreMap","setItem","stringify","TitleScene","isFirstTime","titleScreen","tapToStart","highScoreText","API","titleText","startButton","descriptionButton","modeSelector","creditButton","centerUISizer","uiSizer","handleTapToStart","alpha","stopByKey","fadeIn","setScale","RetryButton","ToTitleButton","ResultScene","Error","highScore","gameOverScreen","contentText","retryButton","toTitleButton","TEXT_LIST","IntroScene","currentIndex","textInfo","textItem","createTextItem","handleSkipText","next","addEventListener","autoCenter","default","arcade","gravity","url","plugins","global","plugin","WebFontLoaderPlugin","RexUIPlugin","mapping","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","scriptUrl","importScripts","document","currentScript","src","scripts","getElementsByTagName","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}